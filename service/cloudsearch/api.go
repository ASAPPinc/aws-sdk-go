package cloudsearch

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"time"

	"github.com/awslabs/aws-sdk-go/aws"
)

// BuildSuggestersRequest generates a request for the BuildSuggesters operation.
func (c *CloudSearch) BuildSuggestersRequest(input *BuildSuggestersInput) (req *aws.Request, output *BuildSuggestersOutput) {
	if opBuildSuggesters == nil {
		opBuildSuggesters = &aws.Operation{
			Name:       "BuildSuggesters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opBuildSuggesters, input, output)
	output = &BuildSuggestersOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) BuildSuggesters(input *BuildSuggestersInput) (output *BuildSuggestersOutput, err error) {
	req, out := c.BuildSuggestersRequest(input)
	output = out
	err = req.Send()
	return
}

var opBuildSuggesters *aws.Operation

// CreateDomainRequest generates a request for the CreateDomain operation.
func (c *CloudSearch) CreateDomainRequest(input *CreateDomainInput) (req *aws.Request, output *CreateDomainOutput) {
	if opCreateDomain == nil {
		opCreateDomain = &aws.Operation{
			Name:       "CreateDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateDomain, input, output)
	output = &CreateDomainOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) CreateDomain(input *CreateDomainInput) (output *CreateDomainOutput, err error) {
	req, out := c.CreateDomainRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateDomain *aws.Operation

// DefineAnalysisSchemeRequest generates a request for the DefineAnalysisScheme operation.
func (c *CloudSearch) DefineAnalysisSchemeRequest(input *DefineAnalysisSchemeInput) (req *aws.Request, output *DefineAnalysisSchemeOutput) {
	if opDefineAnalysisScheme == nil {
		opDefineAnalysisScheme = &aws.Operation{
			Name:       "DefineAnalysisScheme",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDefineAnalysisScheme, input, output)
	output = &DefineAnalysisSchemeOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DefineAnalysisScheme(input *DefineAnalysisSchemeInput) (output *DefineAnalysisSchemeOutput, err error) {
	req, out := c.DefineAnalysisSchemeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDefineAnalysisScheme *aws.Operation

// DefineExpressionRequest generates a request for the DefineExpression operation.
func (c *CloudSearch) DefineExpressionRequest(input *DefineExpressionInput) (req *aws.Request, output *DefineExpressionOutput) {
	if opDefineExpression == nil {
		opDefineExpression = &aws.Operation{
			Name:       "DefineExpression",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDefineExpression, input, output)
	output = &DefineExpressionOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DefineExpression(input *DefineExpressionInput) (output *DefineExpressionOutput, err error) {
	req, out := c.DefineExpressionRequest(input)
	output = out
	err = req.Send()
	return
}

var opDefineExpression *aws.Operation

// DefineIndexFieldRequest generates a request for the DefineIndexField operation.
func (c *CloudSearch) DefineIndexFieldRequest(input *DefineIndexFieldInput) (req *aws.Request, output *DefineIndexFieldOutput) {
	if opDefineIndexField == nil {
		opDefineIndexField = &aws.Operation{
			Name:       "DefineIndexField",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDefineIndexField, input, output)
	output = &DefineIndexFieldOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DefineIndexField(input *DefineIndexFieldInput) (output *DefineIndexFieldOutput, err error) {
	req, out := c.DefineIndexFieldRequest(input)
	output = out
	err = req.Send()
	return
}

var opDefineIndexField *aws.Operation

// DefineSuggesterRequest generates a request for the DefineSuggester operation.
func (c *CloudSearch) DefineSuggesterRequest(input *DefineSuggesterInput) (req *aws.Request, output *DefineSuggesterOutput) {
	if opDefineSuggester == nil {
		opDefineSuggester = &aws.Operation{
			Name:       "DefineSuggester",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDefineSuggester, input, output)
	output = &DefineSuggesterOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DefineSuggester(input *DefineSuggesterInput) (output *DefineSuggesterOutput, err error) {
	req, out := c.DefineSuggesterRequest(input)
	output = out
	err = req.Send()
	return
}

var opDefineSuggester *aws.Operation

// DeleteAnalysisSchemeRequest generates a request for the DeleteAnalysisScheme operation.
func (c *CloudSearch) DeleteAnalysisSchemeRequest(input *DeleteAnalysisSchemeInput) (req *aws.Request, output *DeleteAnalysisSchemeOutput) {
	if opDeleteAnalysisScheme == nil {
		opDeleteAnalysisScheme = &aws.Operation{
			Name:       "DeleteAnalysisScheme",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteAnalysisScheme, input, output)
	output = &DeleteAnalysisSchemeOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DeleteAnalysisScheme(input *DeleteAnalysisSchemeInput) (output *DeleteAnalysisSchemeOutput, err error) {
	req, out := c.DeleteAnalysisSchemeRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteAnalysisScheme *aws.Operation

// DeleteDomainRequest generates a request for the DeleteDomain operation.
func (c *CloudSearch) DeleteDomainRequest(input *DeleteDomainInput) (req *aws.Request, output *DeleteDomainOutput) {
	if opDeleteDomain == nil {
		opDeleteDomain = &aws.Operation{
			Name:       "DeleteDomain",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteDomain, input, output)
	output = &DeleteDomainOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DeleteDomain(input *DeleteDomainInput) (output *DeleteDomainOutput, err error) {
	req, out := c.DeleteDomainRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteDomain *aws.Operation

// DeleteExpressionRequest generates a request for the DeleteExpression operation.
func (c *CloudSearch) DeleteExpressionRequest(input *DeleteExpressionInput) (req *aws.Request, output *DeleteExpressionOutput) {
	if opDeleteExpression == nil {
		opDeleteExpression = &aws.Operation{
			Name:       "DeleteExpression",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteExpression, input, output)
	output = &DeleteExpressionOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DeleteExpression(input *DeleteExpressionInput) (output *DeleteExpressionOutput, err error) {
	req, out := c.DeleteExpressionRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteExpression *aws.Operation

// DeleteIndexFieldRequest generates a request for the DeleteIndexField operation.
func (c *CloudSearch) DeleteIndexFieldRequest(input *DeleteIndexFieldInput) (req *aws.Request, output *DeleteIndexFieldOutput) {
	if opDeleteIndexField == nil {
		opDeleteIndexField = &aws.Operation{
			Name:       "DeleteIndexField",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteIndexField, input, output)
	output = &DeleteIndexFieldOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DeleteIndexField(input *DeleteIndexFieldInput) (output *DeleteIndexFieldOutput, err error) {
	req, out := c.DeleteIndexFieldRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteIndexField *aws.Operation

// DeleteSuggesterRequest generates a request for the DeleteSuggester operation.
func (c *CloudSearch) DeleteSuggesterRequest(input *DeleteSuggesterInput) (req *aws.Request, output *DeleteSuggesterOutput) {
	if opDeleteSuggester == nil {
		opDeleteSuggester = &aws.Operation{
			Name:       "DeleteSuggester",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteSuggester, input, output)
	output = &DeleteSuggesterOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DeleteSuggester(input *DeleteSuggesterInput) (output *DeleteSuggesterOutput, err error) {
	req, out := c.DeleteSuggesterRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteSuggester *aws.Operation

// DescribeAnalysisSchemesRequest generates a request for the DescribeAnalysisSchemes operation.
func (c *CloudSearch) DescribeAnalysisSchemesRequest(input *DescribeAnalysisSchemesInput) (req *aws.Request, output *DescribeAnalysisSchemesOutput) {
	if opDescribeAnalysisSchemes == nil {
		opDescribeAnalysisSchemes = &aws.Operation{
			Name:       "DescribeAnalysisSchemes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "",
				OutputToken:     "",
				LimitToken:      "",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAnalysisSchemes, input, output)
	output = &DescribeAnalysisSchemesOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeAnalysisSchemes(input *DescribeAnalysisSchemesInput) (output *DescribeAnalysisSchemesOutput, err error) {
	req, out := c.DescribeAnalysisSchemesRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *CloudSearch) DescribeAnalysisSchemesPages(input *DescribeAnalysisSchemesInput) <-chan *DescribeAnalysisSchemesOutput {
	page, _ := c.DescribeAnalysisSchemesRequest(input)
	ch := make(chan *DescribeAnalysisSchemesOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeAnalysisSchemesOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeAnalysisSchemes *aws.Operation

// DescribeAvailabilityOptionsRequest generates a request for the DescribeAvailabilityOptions operation.
func (c *CloudSearch) DescribeAvailabilityOptionsRequest(input *DescribeAvailabilityOptionsInput) (req *aws.Request, output *DescribeAvailabilityOptionsOutput) {
	if opDescribeAvailabilityOptions == nil {
		opDescribeAvailabilityOptions = &aws.Operation{
			Name:       "DescribeAvailabilityOptions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAvailabilityOptions, input, output)
	output = &DescribeAvailabilityOptionsOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeAvailabilityOptions(input *DescribeAvailabilityOptionsInput) (output *DescribeAvailabilityOptionsOutput, err error) {
	req, out := c.DescribeAvailabilityOptionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeAvailabilityOptions *aws.Operation

// DescribeDomainsRequest generates a request for the DescribeDomains operation.
func (c *CloudSearch) DescribeDomainsRequest(input *DescribeDomainsInput) (req *aws.Request, output *DescribeDomainsOutput) {
	if opDescribeDomains == nil {
		opDescribeDomains = &aws.Operation{
			Name:       "DescribeDomains",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "",
				OutputToken:     "",
				LimitToken:      "",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeDomains, input, output)
	output = &DescribeDomainsOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeDomains(input *DescribeDomainsInput) (output *DescribeDomainsOutput, err error) {
	req, out := c.DescribeDomainsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *CloudSearch) DescribeDomainsPages(input *DescribeDomainsInput) <-chan *DescribeDomainsOutput {
	page, _ := c.DescribeDomainsRequest(input)
	ch := make(chan *DescribeDomainsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeDomainsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeDomains *aws.Operation

// DescribeExpressionsRequest generates a request for the DescribeExpressions operation.
func (c *CloudSearch) DescribeExpressionsRequest(input *DescribeExpressionsInput) (req *aws.Request, output *DescribeExpressionsOutput) {
	if opDescribeExpressions == nil {
		opDescribeExpressions = &aws.Operation{
			Name:       "DescribeExpressions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "",
				OutputToken:     "",
				LimitToken:      "",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeExpressions, input, output)
	output = &DescribeExpressionsOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeExpressions(input *DescribeExpressionsInput) (output *DescribeExpressionsOutput, err error) {
	req, out := c.DescribeExpressionsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *CloudSearch) DescribeExpressionsPages(input *DescribeExpressionsInput) <-chan *DescribeExpressionsOutput {
	page, _ := c.DescribeExpressionsRequest(input)
	ch := make(chan *DescribeExpressionsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeExpressionsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeExpressions *aws.Operation

// DescribeIndexFieldsRequest generates a request for the DescribeIndexFields operation.
func (c *CloudSearch) DescribeIndexFieldsRequest(input *DescribeIndexFieldsInput) (req *aws.Request, output *DescribeIndexFieldsOutput) {
	if opDescribeIndexFields == nil {
		opDescribeIndexFields = &aws.Operation{
			Name:       "DescribeIndexFields",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "",
				OutputToken:     "",
				LimitToken:      "",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeIndexFields, input, output)
	output = &DescribeIndexFieldsOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeIndexFields(input *DescribeIndexFieldsInput) (output *DescribeIndexFieldsOutput, err error) {
	req, out := c.DescribeIndexFieldsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *CloudSearch) DescribeIndexFieldsPages(input *DescribeIndexFieldsInput) <-chan *DescribeIndexFieldsOutput {
	page, _ := c.DescribeIndexFieldsRequest(input)
	ch := make(chan *DescribeIndexFieldsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeIndexFieldsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeIndexFields *aws.Operation

// DescribeScalingParametersRequest generates a request for the DescribeScalingParameters operation.
func (c *CloudSearch) DescribeScalingParametersRequest(input *DescribeScalingParametersInput) (req *aws.Request, output *DescribeScalingParametersOutput) {
	if opDescribeScalingParameters == nil {
		opDescribeScalingParameters = &aws.Operation{
			Name:       "DescribeScalingParameters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScalingParameters, input, output)
	output = &DescribeScalingParametersOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeScalingParameters(input *DescribeScalingParametersInput) (output *DescribeScalingParametersOutput, err error) {
	req, out := c.DescribeScalingParametersRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeScalingParameters *aws.Operation

// DescribeServiceAccessPoliciesRequest generates a request for the DescribeServiceAccessPolicies operation.
func (c *CloudSearch) DescribeServiceAccessPoliciesRequest(input *DescribeServiceAccessPoliciesInput) (req *aws.Request, output *DescribeServiceAccessPoliciesOutput) {
	if opDescribeServiceAccessPolicies == nil {
		opDescribeServiceAccessPolicies = &aws.Operation{
			Name:       "DescribeServiceAccessPolicies",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeServiceAccessPolicies, input, output)
	output = &DescribeServiceAccessPoliciesOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeServiceAccessPolicies(input *DescribeServiceAccessPoliciesInput) (output *DescribeServiceAccessPoliciesOutput, err error) {
	req, out := c.DescribeServiceAccessPoliciesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeServiceAccessPolicies *aws.Operation

// DescribeSuggestersRequest generates a request for the DescribeSuggesters operation.
func (c *CloudSearch) DescribeSuggestersRequest(input *DescribeSuggestersInput) (req *aws.Request, output *DescribeSuggestersOutput) {
	if opDescribeSuggesters == nil {
		opDescribeSuggesters = &aws.Operation{
			Name:       "DescribeSuggesters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "",
				OutputToken:     "",
				LimitToken:      "",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeSuggesters, input, output)
	output = &DescribeSuggestersOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) DescribeSuggesters(input *DescribeSuggestersInput) (output *DescribeSuggestersOutput, err error) {
	req, out := c.DescribeSuggestersRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *CloudSearch) DescribeSuggestersPages(input *DescribeSuggestersInput) <-chan *DescribeSuggestersOutput {
	page, _ := c.DescribeSuggestersRequest(input)
	ch := make(chan *DescribeSuggestersOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeSuggestersOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeSuggesters *aws.Operation

// IndexDocumentsRequest generates a request for the IndexDocuments operation.
func (c *CloudSearch) IndexDocumentsRequest(input *IndexDocumentsInput) (req *aws.Request, output *IndexDocumentsOutput) {
	if opIndexDocuments == nil {
		opIndexDocuments = &aws.Operation{
			Name:       "IndexDocuments",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opIndexDocuments, input, output)
	output = &IndexDocumentsOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) IndexDocuments(input *IndexDocumentsInput) (output *IndexDocumentsOutput, err error) {
	req, out := c.IndexDocumentsRequest(input)
	output = out
	err = req.Send()
	return
}

var opIndexDocuments *aws.Operation

// ListDomainNamesRequest generates a request for the ListDomainNames operation.
func (c *CloudSearch) ListDomainNamesRequest(input *ListDomainNamesInput) (req *aws.Request, output *ListDomainNamesOutput) {
	if opListDomainNames == nil {
		opListDomainNames = &aws.Operation{
			Name:       "ListDomainNames",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opListDomainNames, input, output)
	output = &ListDomainNamesOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) ListDomainNames(input *ListDomainNamesInput) (output *ListDomainNamesOutput, err error) {
	req, out := c.ListDomainNamesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListDomainNames *aws.Operation

// UpdateAvailabilityOptionsRequest generates a request for the UpdateAvailabilityOptions operation.
func (c *CloudSearch) UpdateAvailabilityOptionsRequest(input *UpdateAvailabilityOptionsInput) (req *aws.Request, output *UpdateAvailabilityOptionsOutput) {
	if opUpdateAvailabilityOptions == nil {
		opUpdateAvailabilityOptions = &aws.Operation{
			Name:       "UpdateAvailabilityOptions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateAvailabilityOptions, input, output)
	output = &UpdateAvailabilityOptionsOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) UpdateAvailabilityOptions(input *UpdateAvailabilityOptionsInput) (output *UpdateAvailabilityOptionsOutput, err error) {
	req, out := c.UpdateAvailabilityOptionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateAvailabilityOptions *aws.Operation

// UpdateScalingParametersRequest generates a request for the UpdateScalingParameters operation.
func (c *CloudSearch) UpdateScalingParametersRequest(input *UpdateScalingParametersInput) (req *aws.Request, output *UpdateScalingParametersOutput) {
	if opUpdateScalingParameters == nil {
		opUpdateScalingParameters = &aws.Operation{
			Name:       "UpdateScalingParameters",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateScalingParameters, input, output)
	output = &UpdateScalingParametersOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) UpdateScalingParameters(input *UpdateScalingParametersInput) (output *UpdateScalingParametersOutput, err error) {
	req, out := c.UpdateScalingParametersRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateScalingParameters *aws.Operation

// UpdateServiceAccessPoliciesRequest generates a request for the UpdateServiceAccessPolicies operation.
func (c *CloudSearch) UpdateServiceAccessPoliciesRequest(input *UpdateServiceAccessPoliciesInput) (req *aws.Request, output *UpdateServiceAccessPoliciesOutput) {
	if opUpdateServiceAccessPolicies == nil {
		opUpdateServiceAccessPolicies = &aws.Operation{
			Name:       "UpdateServiceAccessPolicies",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateServiceAccessPolicies, input, output)
	output = &UpdateServiceAccessPoliciesOutput{}
	req.Data = output
	return
}

func (c *CloudSearch) UpdateServiceAccessPolicies(input *UpdateServiceAccessPoliciesInput) (output *UpdateServiceAccessPoliciesOutput, err error) {
	req, out := c.UpdateServiceAccessPoliciesRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateServiceAccessPolicies *aws.Operation

type AccessPoliciesStatus struct {
	Options *string       `type:"string" required:"true"`
	Status  *OptionStatus `type:"structure" required:"true"`

	metadataAccessPoliciesStatus `json:"-", xml:"-"`
}

type metadataAccessPoliciesStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type AnalysisOptions struct {
	AlgorithmicStemming            *string `type:"string"`
	JapaneseTokenizationDictionary *string `type:"string"`
	StemmingDictionary             *string `type:"string"`
	Stopwords                      *string `type:"string"`
	Synonyms                       *string `type:"string"`

	metadataAnalysisOptions `json:"-", xml:"-"`
}

type metadataAnalysisOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type AnalysisScheme struct {
	AnalysisOptions        *AnalysisOptions `type:"structure"`
	AnalysisSchemeLanguage *string          `type:"string" required:"true"`
	AnalysisSchemeName     *string          `type:"string" required:"true"`

	metadataAnalysisScheme `json:"-", xml:"-"`
}

type metadataAnalysisScheme struct {
	SDKShapeTraits bool `type:"structure"`
}

type AnalysisSchemeStatus struct {
	Options *AnalysisScheme `type:"structure" required:"true"`
	Status  *OptionStatus   `type:"structure" required:"true"`

	metadataAnalysisSchemeStatus `json:"-", xml:"-"`
}

type metadataAnalysisSchemeStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type AvailabilityOptionsStatus struct {
	Options *bool         `type:"boolean" required:"true"`
	Status  *OptionStatus `type:"structure" required:"true"`

	metadataAvailabilityOptionsStatus `json:"-", xml:"-"`
}

type metadataAvailabilityOptionsStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type BuildSuggestersInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataBuildSuggestersInput `json:"-", xml:"-"`
}

type metadataBuildSuggestersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type BuildSuggestersOutput struct {
	FieldNames []*string `type:"list"`

	metadataBuildSuggestersOutput `json:"-", xml:"-"`
}

type metadataBuildSuggestersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateDomainInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataCreateDomainInput `json:"-", xml:"-"`
}

type metadataCreateDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateDomainOutput struct {
	DomainStatus *DomainStatus `type:"structure"`

	metadataCreateDomainOutput `json:"-", xml:"-"`
}

type metadataCreateDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DateArrayOptions struct {
	DefaultValue  *string `type:"string"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SourceFields  *string `type:"string"`

	metadataDateArrayOptions `json:"-", xml:"-"`
}

type metadataDateArrayOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type DateOptions struct {
	DefaultValue  *string `type:"string"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SortEnabled   *bool   `type:"boolean"`
	SourceField   *string `type:"string"`

	metadataDateOptions `json:"-", xml:"-"`
}

type metadataDateOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineAnalysisSchemeInput struct {
	AnalysisScheme *AnalysisScheme `type:"structure" required:"true"`
	DomainName     *string         `type:"string" required:"true"`

	metadataDefineAnalysisSchemeInput `json:"-", xml:"-"`
}

type metadataDefineAnalysisSchemeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineAnalysisSchemeOutput struct {
	AnalysisScheme *AnalysisSchemeStatus `type:"structure" required:"true"`

	metadataDefineAnalysisSchemeOutput `json:"-", xml:"-"`
}

type metadataDefineAnalysisSchemeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineExpressionInput struct {
	DomainName *string     `type:"string" required:"true"`
	Expression *Expression `type:"structure" required:"true"`

	metadataDefineExpressionInput `json:"-", xml:"-"`
}

type metadataDefineExpressionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineExpressionOutput struct {
	Expression *ExpressionStatus `type:"structure" required:"true"`

	metadataDefineExpressionOutput `json:"-", xml:"-"`
}

type metadataDefineExpressionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineIndexFieldInput struct {
	DomainName *string     `type:"string" required:"true"`
	IndexField *IndexField `type:"structure" required:"true"`

	metadataDefineIndexFieldInput `json:"-", xml:"-"`
}

type metadataDefineIndexFieldInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineIndexFieldOutput struct {
	IndexField *IndexFieldStatus `type:"structure" required:"true"`

	metadataDefineIndexFieldOutput `json:"-", xml:"-"`
}

type metadataDefineIndexFieldOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineSuggesterInput struct {
	DomainName *string    `type:"string" required:"true"`
	Suggester  *Suggester `type:"structure" required:"true"`

	metadataDefineSuggesterInput `json:"-", xml:"-"`
}

type metadataDefineSuggesterInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DefineSuggesterOutput struct {
	Suggester *SuggesterStatus `type:"structure" required:"true"`

	metadataDefineSuggesterOutput `json:"-", xml:"-"`
}

type metadataDefineSuggesterOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteAnalysisSchemeInput struct {
	AnalysisSchemeName *string `type:"string" required:"true"`
	DomainName         *string `type:"string" required:"true"`

	metadataDeleteAnalysisSchemeInput `json:"-", xml:"-"`
}

type metadataDeleteAnalysisSchemeInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteAnalysisSchemeOutput struct {
	AnalysisScheme *AnalysisSchemeStatus `type:"structure" required:"true"`

	metadataDeleteAnalysisSchemeOutput `json:"-", xml:"-"`
}

type metadataDeleteAnalysisSchemeOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteDomainInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataDeleteDomainInput `json:"-", xml:"-"`
}

type metadataDeleteDomainInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteDomainOutput struct {
	DomainStatus *DomainStatus `type:"structure"`

	metadataDeleteDomainOutput `json:"-", xml:"-"`
}

type metadataDeleteDomainOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteExpressionInput struct {
	DomainName     *string `type:"string" required:"true"`
	ExpressionName *string `type:"string" required:"true"`

	metadataDeleteExpressionInput `json:"-", xml:"-"`
}

type metadataDeleteExpressionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteExpressionOutput struct {
	Expression *ExpressionStatus `type:"structure" required:"true"`

	metadataDeleteExpressionOutput `json:"-", xml:"-"`
}

type metadataDeleteExpressionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteIndexFieldInput struct {
	DomainName     *string `type:"string" required:"true"`
	IndexFieldName *string `type:"string" required:"true"`

	metadataDeleteIndexFieldInput `json:"-", xml:"-"`
}

type metadataDeleteIndexFieldInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteIndexFieldOutput struct {
	IndexField *IndexFieldStatus `type:"structure" required:"true"`

	metadataDeleteIndexFieldOutput `json:"-", xml:"-"`
}

type metadataDeleteIndexFieldOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteSuggesterInput struct {
	DomainName    *string `type:"string" required:"true"`
	SuggesterName *string `type:"string" required:"true"`

	metadataDeleteSuggesterInput `json:"-", xml:"-"`
}

type metadataDeleteSuggesterInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteSuggesterOutput struct {
	Suggester *SuggesterStatus `type:"structure" required:"true"`

	metadataDeleteSuggesterOutput `json:"-", xml:"-"`
}

type metadataDeleteSuggesterOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAnalysisSchemesInput struct {
	AnalysisSchemeNames []*string `type:"list"`
	Deployed            *bool     `type:"boolean"`
	DomainName          *string   `type:"string" required:"true"`

	metadataDescribeAnalysisSchemesInput `json:"-", xml:"-"`
}

type metadataDescribeAnalysisSchemesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAnalysisSchemesOutput struct {
	AnalysisSchemes []*AnalysisSchemeStatus `type:"list" required:"true"`

	metadataDescribeAnalysisSchemesOutput `json:"-", xml:"-"`
}

type metadataDescribeAnalysisSchemesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAvailabilityOptionsInput struct {
	Deployed   *bool   `type:"boolean"`
	DomainName *string `type:"string" required:"true"`

	metadataDescribeAvailabilityOptionsInput `json:"-", xml:"-"`
}

type metadataDescribeAvailabilityOptionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAvailabilityOptionsOutput struct {
	AvailabilityOptions *AvailabilityOptionsStatus `type:"structure"`

	metadataDescribeAvailabilityOptionsOutput `json:"-", xml:"-"`
}

type metadataDescribeAvailabilityOptionsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeDomainsInput struct {
	DomainNames []*string `type:"list"`

	metadataDescribeDomainsInput `json:"-", xml:"-"`
}

type metadataDescribeDomainsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeDomainsOutput struct {
	DomainStatusList []*DomainStatus `type:"list" required:"true"`

	metadataDescribeDomainsOutput `json:"-", xml:"-"`
}

type metadataDescribeDomainsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeExpressionsInput struct {
	Deployed        *bool     `type:"boolean"`
	DomainName      *string   `type:"string" required:"true"`
	ExpressionNames []*string `type:"list"`

	metadataDescribeExpressionsInput `json:"-", xml:"-"`
}

type metadataDescribeExpressionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeExpressionsOutput struct {
	Expressions []*ExpressionStatus `type:"list" required:"true"`

	metadataDescribeExpressionsOutput `json:"-", xml:"-"`
}

type metadataDescribeExpressionsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeIndexFieldsInput struct {
	Deployed   *bool     `type:"boolean"`
	DomainName *string   `type:"string" required:"true"`
	FieldNames []*string `type:"list"`

	metadataDescribeIndexFieldsInput `json:"-", xml:"-"`
}

type metadataDescribeIndexFieldsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeIndexFieldsOutput struct {
	IndexFields []*IndexFieldStatus `type:"list" required:"true"`

	metadataDescribeIndexFieldsOutput `json:"-", xml:"-"`
}

type metadataDescribeIndexFieldsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingParametersInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataDescribeScalingParametersInput `json:"-", xml:"-"`
}

type metadataDescribeScalingParametersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingParametersOutput struct {
	ScalingParameters *ScalingParametersStatus `type:"structure" required:"true"`

	metadataDescribeScalingParametersOutput `json:"-", xml:"-"`
}

type metadataDescribeScalingParametersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeServiceAccessPoliciesInput struct {
	Deployed   *bool   `type:"boolean"`
	DomainName *string `type:"string" required:"true"`

	metadataDescribeServiceAccessPoliciesInput `json:"-", xml:"-"`
}

type metadataDescribeServiceAccessPoliciesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeServiceAccessPoliciesOutput struct {
	AccessPolicies *AccessPoliciesStatus `type:"structure" required:"true"`

	metadataDescribeServiceAccessPoliciesOutput `json:"-", xml:"-"`
}

type metadataDescribeServiceAccessPoliciesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeSuggestersInput struct {
	Deployed       *bool     `type:"boolean"`
	DomainName     *string   `type:"string" required:"true"`
	SuggesterNames []*string `type:"list"`

	metadataDescribeSuggestersInput `json:"-", xml:"-"`
}

type metadataDescribeSuggestersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeSuggestersOutput struct {
	Suggesters []*SuggesterStatus `type:"list" required:"true"`

	metadataDescribeSuggestersOutput `json:"-", xml:"-"`
}

type metadataDescribeSuggestersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DocumentSuggesterOptions struct {
	FuzzyMatching  *string `type:"string"`
	SortExpression *string `type:"string"`
	SourceField    *string `type:"string" required:"true"`

	metadataDocumentSuggesterOptions `json:"-", xml:"-"`
}

type metadataDocumentSuggesterOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type DomainStatus struct {
	ARN                    *string          `type:"string"`
	Created                *bool            `type:"boolean"`
	Deleted                *bool            `type:"boolean"`
	DocService             *ServiceEndpoint `type:"structure"`
	DomainID               *string          `locationName:"DomainId" type:"string" required:"true"`
	DomainName             *string          `type:"string" required:"true"`
	Limits                 *Limits          `type:"structure"`
	Processing             *bool            `type:"boolean"`
	RequiresIndexDocuments *bool            `type:"boolean" required:"true"`
	SearchInstanceCount    *int64           `type:"integer"`
	SearchInstanceType     *string          `type:"string"`
	SearchPartitionCount   *int64           `type:"integer"`
	SearchService          *ServiceEndpoint `type:"structure"`

	metadataDomainStatus `json:"-", xml:"-"`
}

type metadataDomainStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type DoubleArrayOptions struct {
	DefaultValue  *float64 `type:"double"`
	FacetEnabled  *bool    `type:"boolean"`
	ReturnEnabled *bool    `type:"boolean"`
	SearchEnabled *bool    `type:"boolean"`
	SourceFields  *string  `type:"string"`

	metadataDoubleArrayOptions `json:"-", xml:"-"`
}

type metadataDoubleArrayOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type DoubleOptions struct {
	DefaultValue  *float64 `type:"double"`
	FacetEnabled  *bool    `type:"boolean"`
	ReturnEnabled *bool    `type:"boolean"`
	SearchEnabled *bool    `type:"boolean"`
	SortEnabled   *bool    `type:"boolean"`
	SourceField   *string  `type:"string"`

	metadataDoubleOptions `json:"-", xml:"-"`
}

type metadataDoubleOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type Expression struct {
	ExpressionName  *string `type:"string" required:"true"`
	ExpressionValue *string `type:"string" required:"true"`

	metadataExpression `json:"-", xml:"-"`
}

type metadataExpression struct {
	SDKShapeTraits bool `type:"structure"`
}

type ExpressionStatus struct {
	Options *Expression   `type:"structure" required:"true"`
	Status  *OptionStatus `type:"structure" required:"true"`

	metadataExpressionStatus `json:"-", xml:"-"`
}

type metadataExpressionStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type IndexDocumentsInput struct {
	DomainName *string `type:"string" required:"true"`

	metadataIndexDocumentsInput `json:"-", xml:"-"`
}

type metadataIndexDocumentsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type IndexDocumentsOutput struct {
	FieldNames []*string `type:"list"`

	metadataIndexDocumentsOutput `json:"-", xml:"-"`
}

type metadataIndexDocumentsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type IndexField struct {
	DateArrayOptions    *DateArrayOptions    `type:"structure"`
	DateOptions         *DateOptions         `type:"structure"`
	DoubleArrayOptions  *DoubleArrayOptions  `type:"structure"`
	DoubleOptions       *DoubleOptions       `type:"structure"`
	IndexFieldName      *string              `type:"string" required:"true"`
	IndexFieldType      *string              `type:"string" required:"true"`
	IntArrayOptions     *IntArrayOptions     `type:"structure"`
	IntOptions          *IntOptions          `type:"structure"`
	LatLonOptions       *LatLonOptions       `type:"structure"`
	LiteralArrayOptions *LiteralArrayOptions `type:"structure"`
	LiteralOptions      *LiteralOptions      `type:"structure"`
	TextArrayOptions    *TextArrayOptions    `type:"structure"`
	TextOptions         *TextOptions         `type:"structure"`

	metadataIndexField `json:"-", xml:"-"`
}

type metadataIndexField struct {
	SDKShapeTraits bool `type:"structure"`
}

type IndexFieldStatus struct {
	Options *IndexField   `type:"structure" required:"true"`
	Status  *OptionStatus `type:"structure" required:"true"`

	metadataIndexFieldStatus `json:"-", xml:"-"`
}

type metadataIndexFieldStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type IntArrayOptions struct {
	DefaultValue  *int64  `type:"long"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SourceFields  *string `type:"string"`

	metadataIntArrayOptions `json:"-", xml:"-"`
}

type metadataIntArrayOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type IntOptions struct {
	DefaultValue  *int64  `type:"long"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SortEnabled   *bool   `type:"boolean"`
	SourceField   *string `type:"string"`

	metadataIntOptions `json:"-", xml:"-"`
}

type metadataIntOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type LatLonOptions struct {
	DefaultValue  *string `type:"string"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SortEnabled   *bool   `type:"boolean"`
	SourceField   *string `type:"string"`

	metadataLatLonOptions `json:"-", xml:"-"`
}

type metadataLatLonOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type Limits struct {
	MaximumPartitionCount   *int64 `type:"integer" required:"true"`
	MaximumReplicationCount *int64 `type:"integer" required:"true"`

	metadataLimits `json:"-", xml:"-"`
}

type metadataLimits struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListDomainNamesInput struct {
	metadataListDomainNamesInput `json:"-", xml:"-"`
}

type metadataListDomainNamesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListDomainNamesOutput struct {
	DomainNames *map[string]*string `type:"map"`

	metadataListDomainNamesOutput `json:"-", xml:"-"`
}

type metadataListDomainNamesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type LiteralArrayOptions struct {
	DefaultValue  *string `type:"string"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SourceFields  *string `type:"string"`

	metadataLiteralArrayOptions `json:"-", xml:"-"`
}

type metadataLiteralArrayOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type LiteralOptions struct {
	DefaultValue  *string `type:"string"`
	FacetEnabled  *bool   `type:"boolean"`
	ReturnEnabled *bool   `type:"boolean"`
	SearchEnabled *bool   `type:"boolean"`
	SortEnabled   *bool   `type:"boolean"`
	SourceField   *string `type:"string"`

	metadataLiteralOptions `json:"-", xml:"-"`
}

type metadataLiteralOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type OptionStatus struct {
	CreationDate    *time.Time `type:"timestamp" timestampFormat:"iso8601" required:"true"`
	PendingDeletion *bool      `type:"boolean"`
	State           *string    `type:"string" required:"true"`
	UpdateDate      *time.Time `type:"timestamp" timestampFormat:"iso8601" required:"true"`
	UpdateVersion   *int64     `type:"integer"`

	metadataOptionStatus `json:"-", xml:"-"`
}

type metadataOptionStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingParameters struct {
	DesiredInstanceType     *string `type:"string"`
	DesiredPartitionCount   *int64  `type:"integer"`
	DesiredReplicationCount *int64  `type:"integer"`

	metadataScalingParameters `json:"-", xml:"-"`
}

type metadataScalingParameters struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingParametersStatus struct {
	Options *ScalingParameters `type:"structure" required:"true"`
	Status  *OptionStatus      `type:"structure" required:"true"`

	metadataScalingParametersStatus `json:"-", xml:"-"`
}

type metadataScalingParametersStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type ServiceEndpoint struct {
	Endpoint *string `type:"string"`

	metadataServiceEndpoint `json:"-", xml:"-"`
}

type metadataServiceEndpoint struct {
	SDKShapeTraits bool `type:"structure"`
}

type Suggester struct {
	DocumentSuggesterOptions *DocumentSuggesterOptions `type:"structure" required:"true"`
	SuggesterName            *string                   `type:"string" required:"true"`

	metadataSuggester `json:"-", xml:"-"`
}

type metadataSuggester struct {
	SDKShapeTraits bool `type:"structure"`
}

type SuggesterStatus struct {
	Options *Suggester    `type:"structure" required:"true"`
	Status  *OptionStatus `type:"structure" required:"true"`

	metadataSuggesterStatus `json:"-", xml:"-"`
}

type metadataSuggesterStatus struct {
	SDKShapeTraits bool `type:"structure"`
}

type TextArrayOptions struct {
	AnalysisScheme   *string `type:"string"`
	DefaultValue     *string `type:"string"`
	HighlightEnabled *bool   `type:"boolean"`
	ReturnEnabled    *bool   `type:"boolean"`
	SourceFields     *string `type:"string"`

	metadataTextArrayOptions `json:"-", xml:"-"`
}

type metadataTextArrayOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type TextOptions struct {
	AnalysisScheme   *string `type:"string"`
	DefaultValue     *string `type:"string"`
	HighlightEnabled *bool   `type:"boolean"`
	ReturnEnabled    *bool   `type:"boolean"`
	SortEnabled      *bool   `type:"boolean"`
	SourceField      *string `type:"string"`

	metadataTextOptions `json:"-", xml:"-"`
}

type metadataTextOptions struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateAvailabilityOptionsInput struct {
	DomainName *string `type:"string" required:"true"`
	MultiAZ    *bool   `type:"boolean" required:"true"`

	metadataUpdateAvailabilityOptionsInput `json:"-", xml:"-"`
}

type metadataUpdateAvailabilityOptionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateAvailabilityOptionsOutput struct {
	AvailabilityOptions *AvailabilityOptionsStatus `type:"structure"`

	metadataUpdateAvailabilityOptionsOutput `json:"-", xml:"-"`
}

type metadataUpdateAvailabilityOptionsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateScalingParametersInput struct {
	DomainName        *string            `type:"string" required:"true"`
	ScalingParameters *ScalingParameters `type:"structure" required:"true"`

	metadataUpdateScalingParametersInput `json:"-", xml:"-"`
}

type metadataUpdateScalingParametersInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateScalingParametersOutput struct {
	ScalingParameters *ScalingParametersStatus `type:"structure" required:"true"`

	metadataUpdateScalingParametersOutput `json:"-", xml:"-"`
}

type metadataUpdateScalingParametersOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateServiceAccessPoliciesInput struct {
	AccessPolicies *string `type:"string" required:"true"`
	DomainName     *string `type:"string" required:"true"`

	metadataUpdateServiceAccessPoliciesInput `json:"-", xml:"-"`
}

type metadataUpdateServiceAccessPoliciesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateServiceAccessPoliciesOutput struct {
	AccessPolicies *AccessPoliciesStatus `type:"structure" required:"true"`

	metadataUpdateServiceAccessPoliciesOutput `json:"-", xml:"-"`
}

type metadataUpdateServiceAccessPoliciesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}