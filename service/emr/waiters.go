// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package emr

import (
	"github.com/awslabs/aws-sdk-go/internal/waiter"
)
var waiterClusterRunning *waiter.Config

func (c *EMR) WaitUntilClusterRunning(input *DescribeClusterInput) error {
	if waiterClusterRunning == nil {
		waiterClusterRunning = &waiter.Config{
			Operation:   "DescribeCluster",
			Delay:       30,
			MaxAttempts: 60,
			Acceptors: []waiter.WaitAcceptor{
				waiter.WaitAcceptor{
					State:    "success",
					Matcher:  "path",
					Argument: "Cluster.Status.State",
					Expected: RUNNING,
				},
				waiter.WaitAcceptor{
					State:    "success",
					Matcher:  "path",
					Argument: "Cluster.Status.State",
					Expected: WAITING,
				},
				waiter.WaitAcceptor{
					State:    "failure",
					Matcher:  "path",
					Argument: "Cluster.Status.State",
					Expected: TERMINATING,
				},
				waiter.WaitAcceptor{
					State:    "failure",
					Matcher:  "path",
					Argument: "Cluster.Status.State",
					Expected: TERMINATED,
				},
				waiter.WaitAcceptor{
					State:    "failure",
					Matcher:  "path",
					Argument: "Cluster.Status.State",
					Expected: TERMINATED_WITH_ERRORS,
				},
				
			},
		}
	}

	w := waiter.Waiter{
		Client: c,
		Input:  input,
		Config: waiterClusterRunning,
	}
	return w.Wait()
}
