package autoscaling

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"time"

	"github.com/awslabs/aws-sdk-go/aws"
)

// AttachInstancesRequest generates a request for the AttachInstances operation.
func (c *AutoScaling) AttachInstancesRequest(input *AttachInstancesInput) (req *aws.Request, output *AttachInstancesOutput) {
	if opAttachInstances == nil {
		opAttachInstances = &aws.Operation{
			Name:       "AttachInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAttachInstances, input, output)
	output = &AttachInstancesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) AttachInstances(input *AttachInstancesInput) (output *AttachInstancesOutput, err error) {
	req, out := c.AttachInstancesRequest(input)
	output = out
	err = req.Send()
	return
}

var opAttachInstances *aws.Operation

// CompleteLifecycleActionRequest generates a request for the CompleteLifecycleAction operation.
func (c *AutoScaling) CompleteLifecycleActionRequest(input *CompleteLifecycleActionInput) (req *aws.Request, output *CompleteLifecycleActionOutput) {
	if opCompleteLifecycleAction == nil {
		opCompleteLifecycleAction = &aws.Operation{
			Name:       "CompleteLifecycleAction",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCompleteLifecycleAction, input, output)
	output = &CompleteLifecycleActionOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) CompleteLifecycleAction(input *CompleteLifecycleActionInput) (output *CompleteLifecycleActionOutput, err error) {
	req, out := c.CompleteLifecycleActionRequest(input)
	output = out
	err = req.Send()
	return
}

var opCompleteLifecycleAction *aws.Operation

// CreateAutoScalingGroupRequest generates a request for the CreateAutoScalingGroup operation.
func (c *AutoScaling) CreateAutoScalingGroupRequest(input *CreateAutoScalingGroupInput) (req *aws.Request, output *CreateAutoScalingGroupOutput) {
	if opCreateAutoScalingGroup == nil {
		opCreateAutoScalingGroup = &aws.Operation{
			Name:       "CreateAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateAutoScalingGroup, input, output)
	output = &CreateAutoScalingGroupOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) CreateAutoScalingGroup(input *CreateAutoScalingGroupInput) (output *CreateAutoScalingGroupOutput, err error) {
	req, out := c.CreateAutoScalingGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateAutoScalingGroup *aws.Operation

// CreateLaunchConfigurationRequest generates a request for the CreateLaunchConfiguration operation.
func (c *AutoScaling) CreateLaunchConfigurationRequest(input *CreateLaunchConfigurationInput) (req *aws.Request, output *CreateLaunchConfigurationOutput) {
	if opCreateLaunchConfiguration == nil {
		opCreateLaunchConfiguration = &aws.Operation{
			Name:       "CreateLaunchConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateLaunchConfiguration, input, output)
	output = &CreateLaunchConfigurationOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) CreateLaunchConfiguration(input *CreateLaunchConfigurationInput) (output *CreateLaunchConfigurationOutput, err error) {
	req, out := c.CreateLaunchConfigurationRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateLaunchConfiguration *aws.Operation

// CreateOrUpdateTagsRequest generates a request for the CreateOrUpdateTags operation.
func (c *AutoScaling) CreateOrUpdateTagsRequest(input *CreateOrUpdateTagsInput) (req *aws.Request, output *CreateOrUpdateTagsOutput) {
	if opCreateOrUpdateTags == nil {
		opCreateOrUpdateTags = &aws.Operation{
			Name:       "CreateOrUpdateTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateOrUpdateTags, input, output)
	output = &CreateOrUpdateTagsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) CreateOrUpdateTags(input *CreateOrUpdateTagsInput) (output *CreateOrUpdateTagsOutput, err error) {
	req, out := c.CreateOrUpdateTagsRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateOrUpdateTags *aws.Operation

// DeleteAutoScalingGroupRequest generates a request for the DeleteAutoScalingGroup operation.
func (c *AutoScaling) DeleteAutoScalingGroupRequest(input *DeleteAutoScalingGroupInput) (req *aws.Request, output *DeleteAutoScalingGroupOutput) {
	if opDeleteAutoScalingGroup == nil {
		opDeleteAutoScalingGroup = &aws.Operation{
			Name:       "DeleteAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteAutoScalingGroup, input, output)
	output = &DeleteAutoScalingGroupOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteAutoScalingGroup(input *DeleteAutoScalingGroupInput) (output *DeleteAutoScalingGroupOutput, err error) {
	req, out := c.DeleteAutoScalingGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteAutoScalingGroup *aws.Operation

// DeleteLaunchConfigurationRequest generates a request for the DeleteLaunchConfiguration operation.
func (c *AutoScaling) DeleteLaunchConfigurationRequest(input *DeleteLaunchConfigurationInput) (req *aws.Request, output *DeleteLaunchConfigurationOutput) {
	if opDeleteLaunchConfiguration == nil {
		opDeleteLaunchConfiguration = &aws.Operation{
			Name:       "DeleteLaunchConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLaunchConfiguration, input, output)
	output = &DeleteLaunchConfigurationOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteLaunchConfiguration(input *DeleteLaunchConfigurationInput) (output *DeleteLaunchConfigurationOutput, err error) {
	req, out := c.DeleteLaunchConfigurationRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteLaunchConfiguration *aws.Operation

// DeleteLifecycleHookRequest generates a request for the DeleteLifecycleHook operation.
func (c *AutoScaling) DeleteLifecycleHookRequest(input *DeleteLifecycleHookInput) (req *aws.Request, output *DeleteLifecycleHookOutput) {
	if opDeleteLifecycleHook == nil {
		opDeleteLifecycleHook = &aws.Operation{
			Name:       "DeleteLifecycleHook",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLifecycleHook, input, output)
	output = &DeleteLifecycleHookOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteLifecycleHook(input *DeleteLifecycleHookInput) (output *DeleteLifecycleHookOutput, err error) {
	req, out := c.DeleteLifecycleHookRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteLifecycleHook *aws.Operation

// DeleteNotificationConfigurationRequest generates a request for the DeleteNotificationConfiguration operation.
func (c *AutoScaling) DeleteNotificationConfigurationRequest(input *DeleteNotificationConfigurationInput) (req *aws.Request, output *DeleteNotificationConfigurationOutput) {
	if opDeleteNotificationConfiguration == nil {
		opDeleteNotificationConfiguration = &aws.Operation{
			Name:       "DeleteNotificationConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteNotificationConfiguration, input, output)
	output = &DeleteNotificationConfigurationOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteNotificationConfiguration(input *DeleteNotificationConfigurationInput) (output *DeleteNotificationConfigurationOutput, err error) {
	req, out := c.DeleteNotificationConfigurationRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteNotificationConfiguration *aws.Operation

// DeletePolicyRequest generates a request for the DeletePolicy operation.
func (c *AutoScaling) DeletePolicyRequest(input *DeletePolicyInput) (req *aws.Request, output *DeletePolicyOutput) {
	if opDeletePolicy == nil {
		opDeletePolicy = &aws.Operation{
			Name:       "DeletePolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeletePolicy, input, output)
	output = &DeletePolicyOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeletePolicy(input *DeletePolicyInput) (output *DeletePolicyOutput, err error) {
	req, out := c.DeletePolicyRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeletePolicy *aws.Operation

// DeleteScheduledActionRequest generates a request for the DeleteScheduledAction operation.
func (c *AutoScaling) DeleteScheduledActionRequest(input *DeleteScheduledActionInput) (req *aws.Request, output *DeleteScheduledActionOutput) {
	if opDeleteScheduledAction == nil {
		opDeleteScheduledAction = &aws.Operation{
			Name:       "DeleteScheduledAction",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteScheduledAction, input, output)
	output = &DeleteScheduledActionOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteScheduledAction(input *DeleteScheduledActionInput) (output *DeleteScheduledActionOutput, err error) {
	req, out := c.DeleteScheduledActionRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteScheduledAction *aws.Operation

// DeleteTagsRequest generates a request for the DeleteTags operation.
func (c *AutoScaling) DeleteTagsRequest(input *DeleteTagsInput) (req *aws.Request, output *DeleteTagsOutput) {
	if opDeleteTags == nil {
		opDeleteTags = &aws.Operation{
			Name:       "DeleteTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteTags, input, output)
	output = &DeleteTagsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteTags(input *DeleteTagsInput) (output *DeleteTagsOutput, err error) {
	req, out := c.DeleteTagsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteTags *aws.Operation

// DescribeAccountLimitsRequest generates a request for the DescribeAccountLimits operation.
func (c *AutoScaling) DescribeAccountLimitsRequest(input *DescribeAccountLimitsInput) (req *aws.Request, output *DescribeAccountLimitsOutput) {
	if opDescribeAccountLimits == nil {
		opDescribeAccountLimits = &aws.Operation{
			Name:       "DescribeAccountLimits",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAccountLimits, input, output)
	output = &DescribeAccountLimitsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAccountLimits(input *DescribeAccountLimitsInput) (output *DescribeAccountLimitsOutput, err error) {
	req, out := c.DescribeAccountLimitsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeAccountLimits *aws.Operation

// DescribeAdjustmentTypesRequest generates a request for the DescribeAdjustmentTypes operation.
func (c *AutoScaling) DescribeAdjustmentTypesRequest(input *DescribeAdjustmentTypesInput) (req *aws.Request, output *DescribeAdjustmentTypesOutput) {
	if opDescribeAdjustmentTypes == nil {
		opDescribeAdjustmentTypes = &aws.Operation{
			Name:       "DescribeAdjustmentTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAdjustmentTypes, input, output)
	output = &DescribeAdjustmentTypesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAdjustmentTypes(input *DescribeAdjustmentTypesInput) (output *DescribeAdjustmentTypesOutput, err error) {
	req, out := c.DescribeAdjustmentTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeAdjustmentTypes *aws.Operation

// DescribeAutoScalingGroupsRequest generates a request for the DescribeAutoScalingGroups operation.
func (c *AutoScaling) DescribeAutoScalingGroupsRequest(input *DescribeAutoScalingGroupsInput) (req *aws.Request, output *DescribeAutoScalingGroupsOutput) {
	if opDescribeAutoScalingGroups == nil {
		opDescribeAutoScalingGroups = &aws.Operation{
			Name:       "DescribeAutoScalingGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAutoScalingGroups, input, output)
	output = &DescribeAutoScalingGroupsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAutoScalingGroups(input *DescribeAutoScalingGroupsInput) (output *DescribeAutoScalingGroupsOutput, err error) {
	req, out := c.DescribeAutoScalingGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeAutoScalingGroupsPages(input *DescribeAutoScalingGroupsInput) <-chan *DescribeAutoScalingGroupsOutput {
	page, _ := c.DescribeAutoScalingGroupsRequest(input)
	ch := make(chan *DescribeAutoScalingGroupsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeAutoScalingGroupsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeAutoScalingGroups *aws.Operation

// DescribeAutoScalingInstancesRequest generates a request for the DescribeAutoScalingInstances operation.
func (c *AutoScaling) DescribeAutoScalingInstancesRequest(input *DescribeAutoScalingInstancesInput) (req *aws.Request, output *DescribeAutoScalingInstancesOutput) {
	if opDescribeAutoScalingInstances == nil {
		opDescribeAutoScalingInstances = &aws.Operation{
			Name:       "DescribeAutoScalingInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAutoScalingInstances, input, output)
	output = &DescribeAutoScalingInstancesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAutoScalingInstances(input *DescribeAutoScalingInstancesInput) (output *DescribeAutoScalingInstancesOutput, err error) {
	req, out := c.DescribeAutoScalingInstancesRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeAutoScalingInstancesPages(input *DescribeAutoScalingInstancesInput) <-chan *DescribeAutoScalingInstancesOutput {
	page, _ := c.DescribeAutoScalingInstancesRequest(input)
	ch := make(chan *DescribeAutoScalingInstancesOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeAutoScalingInstancesOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeAutoScalingInstances *aws.Operation

// DescribeAutoScalingNotificationTypesRequest generates a request for the DescribeAutoScalingNotificationTypes operation.
func (c *AutoScaling) DescribeAutoScalingNotificationTypesRequest(input *DescribeAutoScalingNotificationTypesInput) (req *aws.Request, output *DescribeAutoScalingNotificationTypesOutput) {
	if opDescribeAutoScalingNotificationTypes == nil {
		opDescribeAutoScalingNotificationTypes = &aws.Operation{
			Name:       "DescribeAutoScalingNotificationTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAutoScalingNotificationTypes, input, output)
	output = &DescribeAutoScalingNotificationTypesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAutoScalingNotificationTypes(input *DescribeAutoScalingNotificationTypesInput) (output *DescribeAutoScalingNotificationTypesOutput, err error) {
	req, out := c.DescribeAutoScalingNotificationTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeAutoScalingNotificationTypes *aws.Operation

// DescribeLaunchConfigurationsRequest generates a request for the DescribeLaunchConfigurations operation.
func (c *AutoScaling) DescribeLaunchConfigurationsRequest(input *DescribeLaunchConfigurationsInput) (req *aws.Request, output *DescribeLaunchConfigurationsOutput) {
	if opDescribeLaunchConfigurations == nil {
		opDescribeLaunchConfigurations = &aws.Operation{
			Name:       "DescribeLaunchConfigurations",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLaunchConfigurations, input, output)
	output = &DescribeLaunchConfigurationsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeLaunchConfigurations(input *DescribeLaunchConfigurationsInput) (output *DescribeLaunchConfigurationsOutput, err error) {
	req, out := c.DescribeLaunchConfigurationsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeLaunchConfigurationsPages(input *DescribeLaunchConfigurationsInput) <-chan *DescribeLaunchConfigurationsOutput {
	page, _ := c.DescribeLaunchConfigurationsRequest(input)
	ch := make(chan *DescribeLaunchConfigurationsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeLaunchConfigurationsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeLaunchConfigurations *aws.Operation

// DescribeLifecycleHookTypesRequest generates a request for the DescribeLifecycleHookTypes operation.
func (c *AutoScaling) DescribeLifecycleHookTypesRequest(input *DescribeLifecycleHookTypesInput) (req *aws.Request, output *DescribeLifecycleHookTypesOutput) {
	if opDescribeLifecycleHookTypes == nil {
		opDescribeLifecycleHookTypes = &aws.Operation{
			Name:       "DescribeLifecycleHookTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLifecycleHookTypes, input, output)
	output = &DescribeLifecycleHookTypesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeLifecycleHookTypes(input *DescribeLifecycleHookTypesInput) (output *DescribeLifecycleHookTypesOutput, err error) {
	req, out := c.DescribeLifecycleHookTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLifecycleHookTypes *aws.Operation

// DescribeLifecycleHooksRequest generates a request for the DescribeLifecycleHooks operation.
func (c *AutoScaling) DescribeLifecycleHooksRequest(input *DescribeLifecycleHooksInput) (req *aws.Request, output *DescribeLifecycleHooksOutput) {
	if opDescribeLifecycleHooks == nil {
		opDescribeLifecycleHooks = &aws.Operation{
			Name:       "DescribeLifecycleHooks",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLifecycleHooks, input, output)
	output = &DescribeLifecycleHooksOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeLifecycleHooks(input *DescribeLifecycleHooksInput) (output *DescribeLifecycleHooksOutput, err error) {
	req, out := c.DescribeLifecycleHooksRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLifecycleHooks *aws.Operation

// DescribeMetricCollectionTypesRequest generates a request for the DescribeMetricCollectionTypes operation.
func (c *AutoScaling) DescribeMetricCollectionTypesRequest(input *DescribeMetricCollectionTypesInput) (req *aws.Request, output *DescribeMetricCollectionTypesOutput) {
	if opDescribeMetricCollectionTypes == nil {
		opDescribeMetricCollectionTypes = &aws.Operation{
			Name:       "DescribeMetricCollectionTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeMetricCollectionTypes, input, output)
	output = &DescribeMetricCollectionTypesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeMetricCollectionTypes(input *DescribeMetricCollectionTypesInput) (output *DescribeMetricCollectionTypesOutput, err error) {
	req, out := c.DescribeMetricCollectionTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeMetricCollectionTypes *aws.Operation

// DescribeNotificationConfigurationsRequest generates a request for the DescribeNotificationConfigurations operation.
func (c *AutoScaling) DescribeNotificationConfigurationsRequest(input *DescribeNotificationConfigurationsInput) (req *aws.Request, output *DescribeNotificationConfigurationsOutput) {
	if opDescribeNotificationConfigurations == nil {
		opDescribeNotificationConfigurations = &aws.Operation{
			Name:       "DescribeNotificationConfigurations",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeNotificationConfigurations, input, output)
	output = &DescribeNotificationConfigurationsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeNotificationConfigurations(input *DescribeNotificationConfigurationsInput) (output *DescribeNotificationConfigurationsOutput, err error) {
	req, out := c.DescribeNotificationConfigurationsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeNotificationConfigurationsPages(input *DescribeNotificationConfigurationsInput) <-chan *DescribeNotificationConfigurationsOutput {
	page, _ := c.DescribeNotificationConfigurationsRequest(input)
	ch := make(chan *DescribeNotificationConfigurationsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeNotificationConfigurationsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeNotificationConfigurations *aws.Operation

// DescribePoliciesRequest generates a request for the DescribePolicies operation.
func (c *AutoScaling) DescribePoliciesRequest(input *DescribePoliciesInput) (req *aws.Request, output *DescribePoliciesOutput) {
	if opDescribePolicies == nil {
		opDescribePolicies = &aws.Operation{
			Name:       "DescribePolicies",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribePolicies, input, output)
	output = &DescribePoliciesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribePolicies(input *DescribePoliciesInput) (output *DescribePoliciesOutput, err error) {
	req, out := c.DescribePoliciesRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribePoliciesPages(input *DescribePoliciesInput) <-chan *DescribePoliciesOutput {
	page, _ := c.DescribePoliciesRequest(input)
	ch := make(chan *DescribePoliciesOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribePoliciesOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribePolicies *aws.Operation

// DescribeScalingActivitiesRequest generates a request for the DescribeScalingActivities operation.
func (c *AutoScaling) DescribeScalingActivitiesRequest(input *DescribeScalingActivitiesInput) (req *aws.Request, output *DescribeScalingActivitiesOutput) {
	if opDescribeScalingActivities == nil {
		opDescribeScalingActivities = &aws.Operation{
			Name:       "DescribeScalingActivities",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScalingActivities, input, output)
	output = &DescribeScalingActivitiesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeScalingActivities(input *DescribeScalingActivitiesInput) (output *DescribeScalingActivitiesOutput, err error) {
	req, out := c.DescribeScalingActivitiesRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeScalingActivitiesPages(input *DescribeScalingActivitiesInput) <-chan *DescribeScalingActivitiesOutput {
	page, _ := c.DescribeScalingActivitiesRequest(input)
	ch := make(chan *DescribeScalingActivitiesOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeScalingActivitiesOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeScalingActivities *aws.Operation

// DescribeScalingProcessTypesRequest generates a request for the DescribeScalingProcessTypes operation.
func (c *AutoScaling) DescribeScalingProcessTypesRequest(input *DescribeScalingProcessTypesInput) (req *aws.Request, output *DescribeScalingProcessTypesOutput) {
	if opDescribeScalingProcessTypes == nil {
		opDescribeScalingProcessTypes = &aws.Operation{
			Name:       "DescribeScalingProcessTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScalingProcessTypes, input, output)
	output = &DescribeScalingProcessTypesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeScalingProcessTypes(input *DescribeScalingProcessTypesInput) (output *DescribeScalingProcessTypesOutput, err error) {
	req, out := c.DescribeScalingProcessTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeScalingProcessTypes *aws.Operation

// DescribeScheduledActionsRequest generates a request for the DescribeScheduledActions operation.
func (c *AutoScaling) DescribeScheduledActionsRequest(input *DescribeScheduledActionsInput) (req *aws.Request, output *DescribeScheduledActionsOutput) {
	if opDescribeScheduledActions == nil {
		opDescribeScheduledActions = &aws.Operation{
			Name:       "DescribeScheduledActions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScheduledActions, input, output)
	output = &DescribeScheduledActionsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeScheduledActions(input *DescribeScheduledActionsInput) (output *DescribeScheduledActionsOutput, err error) {
	req, out := c.DescribeScheduledActionsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeScheduledActionsPages(input *DescribeScheduledActionsInput) <-chan *DescribeScheduledActionsOutput {
	page, _ := c.DescribeScheduledActionsRequest(input)
	ch := make(chan *DescribeScheduledActionsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeScheduledActionsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeScheduledActions *aws.Operation

// DescribeTagsRequest generates a request for the DescribeTags operation.
func (c *AutoScaling) DescribeTagsRequest(input *DescribeTagsInput) (req *aws.Request, output *DescribeTagsOutput) {
	if opDescribeTags == nil {
		opDescribeTags = &aws.Operation{
			Name:       "DescribeTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
			Paginator: &aws.Paginator{
				InputToken:      "NextToken",
				OutputToken:     "NextToken",
				LimitToken:      "MaxRecords",
				TruncationToken: "",
			},
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTags, input, output)
	output = &DescribeTagsOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeTags(input *DescribeTagsInput) (output *DescribeTagsOutput, err error) {
	req, out := c.DescribeTagsRequest(input)
	output = out
	err = req.Send()
	return
}

func (c *AutoScaling) DescribeTagsPages(input *DescribeTagsInput) <-chan *DescribeTagsOutput {
	page, _ := c.DescribeTagsRequest(input)
	ch := make(chan *DescribeTagsOutput)
	go func() {
		for page != nil {
			page.Send()
			out := page.Data.(*DescribeTagsOutput)
			ch <- out
			page = page.NextPage()
		}
		close(ch)
	}()
	return ch
}

var opDescribeTags *aws.Operation

// DescribeTerminationPolicyTypesRequest generates a request for the DescribeTerminationPolicyTypes operation.
func (c *AutoScaling) DescribeTerminationPolicyTypesRequest(input *DescribeTerminationPolicyTypesInput) (req *aws.Request, output *DescribeTerminationPolicyTypesOutput) {
	if opDescribeTerminationPolicyTypes == nil {
		opDescribeTerminationPolicyTypes = &aws.Operation{
			Name:       "DescribeTerminationPolicyTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTerminationPolicyTypes, input, output)
	output = &DescribeTerminationPolicyTypesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeTerminationPolicyTypes(input *DescribeTerminationPolicyTypesInput) (output *DescribeTerminationPolicyTypesOutput, err error) {
	req, out := c.DescribeTerminationPolicyTypesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeTerminationPolicyTypes *aws.Operation

// DetachInstancesRequest generates a request for the DetachInstances operation.
func (c *AutoScaling) DetachInstancesRequest(input *DetachInstancesInput) (req *aws.Request, output *DetachInstancesOutput) {
	if opDetachInstances == nil {
		opDetachInstances = &aws.Operation{
			Name:       "DetachInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDetachInstances, input, output)
	output = &DetachInstancesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DetachInstances(input *DetachInstancesInput) (output *DetachInstancesOutput, err error) {
	req, out := c.DetachInstancesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDetachInstances *aws.Operation

// DisableMetricsCollectionRequest generates a request for the DisableMetricsCollection operation.
func (c *AutoScaling) DisableMetricsCollectionRequest(input *DisableMetricsCollectionInput) (req *aws.Request, output *DisableMetricsCollectionOutput) {
	if opDisableMetricsCollection == nil {
		opDisableMetricsCollection = &aws.Operation{
			Name:       "DisableMetricsCollection",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDisableMetricsCollection, input, output)
	output = &DisableMetricsCollectionOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) DisableMetricsCollection(input *DisableMetricsCollectionInput) (output *DisableMetricsCollectionOutput, err error) {
	req, out := c.DisableMetricsCollectionRequest(input)
	output = out
	err = req.Send()
	return
}

var opDisableMetricsCollection *aws.Operation

// EnableMetricsCollectionRequest generates a request for the EnableMetricsCollection operation.
func (c *AutoScaling) EnableMetricsCollectionRequest(input *EnableMetricsCollectionInput) (req *aws.Request, output *EnableMetricsCollectionOutput) {
	if opEnableMetricsCollection == nil {
		opEnableMetricsCollection = &aws.Operation{
			Name:       "EnableMetricsCollection",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opEnableMetricsCollection, input, output)
	output = &EnableMetricsCollectionOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) EnableMetricsCollection(input *EnableMetricsCollectionInput) (output *EnableMetricsCollectionOutput, err error) {
	req, out := c.EnableMetricsCollectionRequest(input)
	output = out
	err = req.Send()
	return
}

var opEnableMetricsCollection *aws.Operation

// EnterStandbyRequest generates a request for the EnterStandby operation.
func (c *AutoScaling) EnterStandbyRequest(input *EnterStandbyInput) (req *aws.Request, output *EnterStandbyOutput) {
	if opEnterStandby == nil {
		opEnterStandby = &aws.Operation{
			Name:       "EnterStandby",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opEnterStandby, input, output)
	output = &EnterStandbyOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) EnterStandby(input *EnterStandbyInput) (output *EnterStandbyOutput, err error) {
	req, out := c.EnterStandbyRequest(input)
	output = out
	err = req.Send()
	return
}

var opEnterStandby *aws.Operation

// ExecutePolicyRequest generates a request for the ExecutePolicy operation.
func (c *AutoScaling) ExecutePolicyRequest(input *ExecutePolicyInput) (req *aws.Request, output *ExecutePolicyOutput) {
	if opExecutePolicy == nil {
		opExecutePolicy = &aws.Operation{
			Name:       "ExecutePolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opExecutePolicy, input, output)
	output = &ExecutePolicyOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) ExecutePolicy(input *ExecutePolicyInput) (output *ExecutePolicyOutput, err error) {
	req, out := c.ExecutePolicyRequest(input)
	output = out
	err = req.Send()
	return
}

var opExecutePolicy *aws.Operation

// ExitStandbyRequest generates a request for the ExitStandby operation.
func (c *AutoScaling) ExitStandbyRequest(input *ExitStandbyInput) (req *aws.Request, output *ExitStandbyOutput) {
	if opExitStandby == nil {
		opExitStandby = &aws.Operation{
			Name:       "ExitStandby",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opExitStandby, input, output)
	output = &ExitStandbyOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) ExitStandby(input *ExitStandbyInput) (output *ExitStandbyOutput, err error) {
	req, out := c.ExitStandbyRequest(input)
	output = out
	err = req.Send()
	return
}

var opExitStandby *aws.Operation

// PutLifecycleHookRequest generates a request for the PutLifecycleHook operation.
func (c *AutoScaling) PutLifecycleHookRequest(input *PutLifecycleHookInput) (req *aws.Request, output *PutLifecycleHookOutput) {
	if opPutLifecycleHook == nil {
		opPutLifecycleHook = &aws.Operation{
			Name:       "PutLifecycleHook",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutLifecycleHook, input, output)
	output = &PutLifecycleHookOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) PutLifecycleHook(input *PutLifecycleHookInput) (output *PutLifecycleHookOutput, err error) {
	req, out := c.PutLifecycleHookRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutLifecycleHook *aws.Operation

// PutNotificationConfigurationRequest generates a request for the PutNotificationConfiguration operation.
func (c *AutoScaling) PutNotificationConfigurationRequest(input *PutNotificationConfigurationInput) (req *aws.Request, output *PutNotificationConfigurationOutput) {
	if opPutNotificationConfiguration == nil {
		opPutNotificationConfiguration = &aws.Operation{
			Name:       "PutNotificationConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutNotificationConfiguration, input, output)
	output = &PutNotificationConfigurationOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) PutNotificationConfiguration(input *PutNotificationConfigurationInput) (output *PutNotificationConfigurationOutput, err error) {
	req, out := c.PutNotificationConfigurationRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutNotificationConfiguration *aws.Operation

// PutScalingPolicyRequest generates a request for the PutScalingPolicy operation.
func (c *AutoScaling) PutScalingPolicyRequest(input *PutScalingPolicyInput) (req *aws.Request, output *PutScalingPolicyOutput) {
	if opPutScalingPolicy == nil {
		opPutScalingPolicy = &aws.Operation{
			Name:       "PutScalingPolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutScalingPolicy, input, output)
	output = &PutScalingPolicyOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) PutScalingPolicy(input *PutScalingPolicyInput) (output *PutScalingPolicyOutput, err error) {
	req, out := c.PutScalingPolicyRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutScalingPolicy *aws.Operation

// PutScheduledUpdateGroupActionRequest generates a request for the PutScheduledUpdateGroupAction operation.
func (c *AutoScaling) PutScheduledUpdateGroupActionRequest(input *PutScheduledUpdateGroupActionInput) (req *aws.Request, output *PutScheduledUpdateGroupActionOutput) {
	if opPutScheduledUpdateGroupAction == nil {
		opPutScheduledUpdateGroupAction = &aws.Operation{
			Name:       "PutScheduledUpdateGroupAction",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutScheduledUpdateGroupAction, input, output)
	output = &PutScheduledUpdateGroupActionOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) PutScheduledUpdateGroupAction(input *PutScheduledUpdateGroupActionInput) (output *PutScheduledUpdateGroupActionOutput, err error) {
	req, out := c.PutScheduledUpdateGroupActionRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutScheduledUpdateGroupAction *aws.Operation

// RecordLifecycleActionHeartbeatRequest generates a request for the RecordLifecycleActionHeartbeat operation.
func (c *AutoScaling) RecordLifecycleActionHeartbeatRequest(input *RecordLifecycleActionHeartbeatInput) (req *aws.Request, output *RecordLifecycleActionHeartbeatOutput) {
	if opRecordLifecycleActionHeartbeat == nil {
		opRecordLifecycleActionHeartbeat = &aws.Operation{
			Name:       "RecordLifecycleActionHeartbeat",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRecordLifecycleActionHeartbeat, input, output)
	output = &RecordLifecycleActionHeartbeatOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) RecordLifecycleActionHeartbeat(input *RecordLifecycleActionHeartbeatInput) (output *RecordLifecycleActionHeartbeatOutput, err error) {
	req, out := c.RecordLifecycleActionHeartbeatRequest(input)
	output = out
	err = req.Send()
	return
}

var opRecordLifecycleActionHeartbeat *aws.Operation

// ResumeProcessesRequest generates a request for the ResumeProcesses operation.
func (c *AutoScaling) ResumeProcessesRequest(input *ScalingProcessQuery) (req *aws.Request, output *ResumeProcessesOutput) {
	if opResumeProcesses == nil {
		opResumeProcesses = &aws.Operation{
			Name:       "ResumeProcesses",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opResumeProcesses, input, output)
	output = &ResumeProcessesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) ResumeProcesses(input *ScalingProcessQuery) (output *ResumeProcessesOutput, err error) {
	req, out := c.ResumeProcessesRequest(input)
	output = out
	err = req.Send()
	return
}

var opResumeProcesses *aws.Operation

// SetDesiredCapacityRequest generates a request for the SetDesiredCapacity operation.
func (c *AutoScaling) SetDesiredCapacityRequest(input *SetDesiredCapacityInput) (req *aws.Request, output *SetDesiredCapacityOutput) {
	if opSetDesiredCapacity == nil {
		opSetDesiredCapacity = &aws.Operation{
			Name:       "SetDesiredCapacity",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSetDesiredCapacity, input, output)
	output = &SetDesiredCapacityOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) SetDesiredCapacity(input *SetDesiredCapacityInput) (output *SetDesiredCapacityOutput, err error) {
	req, out := c.SetDesiredCapacityRequest(input)
	output = out
	err = req.Send()
	return
}

var opSetDesiredCapacity *aws.Operation

// SetInstanceHealthRequest generates a request for the SetInstanceHealth operation.
func (c *AutoScaling) SetInstanceHealthRequest(input *SetInstanceHealthInput) (req *aws.Request, output *SetInstanceHealthOutput) {
	if opSetInstanceHealth == nil {
		opSetInstanceHealth = &aws.Operation{
			Name:       "SetInstanceHealth",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSetInstanceHealth, input, output)
	output = &SetInstanceHealthOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) SetInstanceHealth(input *SetInstanceHealthInput) (output *SetInstanceHealthOutput, err error) {
	req, out := c.SetInstanceHealthRequest(input)
	output = out
	err = req.Send()
	return
}

var opSetInstanceHealth *aws.Operation

// SuspendProcessesRequest generates a request for the SuspendProcesses operation.
func (c *AutoScaling) SuspendProcessesRequest(input *ScalingProcessQuery) (req *aws.Request, output *SuspendProcessesOutput) {
	if opSuspendProcesses == nil {
		opSuspendProcesses = &aws.Operation{
			Name:       "SuspendProcesses",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSuspendProcesses, input, output)
	output = &SuspendProcessesOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) SuspendProcesses(input *ScalingProcessQuery) (output *SuspendProcessesOutput, err error) {
	req, out := c.SuspendProcessesRequest(input)
	output = out
	err = req.Send()
	return
}

var opSuspendProcesses *aws.Operation

// TerminateInstanceInAutoScalingGroupRequest generates a request for the TerminateInstanceInAutoScalingGroup operation.
func (c *AutoScaling) TerminateInstanceInAutoScalingGroupRequest(input *TerminateInstanceInAutoScalingGroupInput) (req *aws.Request, output *TerminateInstanceInAutoScalingGroupOutput) {
	if opTerminateInstanceInAutoScalingGroup == nil {
		opTerminateInstanceInAutoScalingGroup = &aws.Operation{
			Name:       "TerminateInstanceInAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opTerminateInstanceInAutoScalingGroup, input, output)
	output = &TerminateInstanceInAutoScalingGroupOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) TerminateInstanceInAutoScalingGroup(input *TerminateInstanceInAutoScalingGroupInput) (output *TerminateInstanceInAutoScalingGroupOutput, err error) {
	req, out := c.TerminateInstanceInAutoScalingGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opTerminateInstanceInAutoScalingGroup *aws.Operation

// UpdateAutoScalingGroupRequest generates a request for the UpdateAutoScalingGroup operation.
func (c *AutoScaling) UpdateAutoScalingGroupRequest(input *UpdateAutoScalingGroupInput) (req *aws.Request, output *UpdateAutoScalingGroupOutput) {
	if opUpdateAutoScalingGroup == nil {
		opUpdateAutoScalingGroup = &aws.Operation{
			Name:       "UpdateAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateAutoScalingGroup, input, output)
	output = &UpdateAutoScalingGroupOutput{}
	req.Data = output
	return
}

func (c *AutoScaling) UpdateAutoScalingGroup(input *UpdateAutoScalingGroupInput) (output *UpdateAutoScalingGroupOutput, err error) {
	req, out := c.UpdateAutoScalingGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateAutoScalingGroup *aws.Operation

type Activity struct {
	ActivityID           *string    `locationName:"ActivityId" type:"string" required:"true"`
	AutoScalingGroupName *string    `type:"string" required:"true"`
	Cause                *string    `type:"string" required:"true"`
	Description          *string    `type:"string"`
	Details              *string    `type:"string"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Progress             *int64     `type:"integer"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601" required:"true"`
	StatusCode           *string    `type:"string" required:"true"`
	StatusMessage        *string    `type:"string"`

	metadataActivity `json:"-", xml:"-"`
}

type metadataActivity struct {
	SDKShapeTraits bool `type:"structure"`
}

type AdjustmentType struct {
	AdjustmentType *string `type:"string"`

	metadataAdjustmentType `json:"-", xml:"-"`
}

type metadataAdjustmentType struct {
	SDKShapeTraits bool `type:"structure"`
}

type Alarm struct {
	AlarmARN  *string `type:"string"`
	AlarmName *string `type:"string"`

	metadataAlarm `json:"-", xml:"-"`
}

type metadataAlarm struct {
	SDKShapeTraits bool `type:"structure"`
}

type AttachInstancesInput struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	InstanceIDs          []*string `locationName:"InstanceIds" type:"list"`

	metadataAttachInstancesInput `json:"-", xml:"-"`
}

type metadataAttachInstancesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AttachInstancesOutput struct {
	metadataAttachInstancesOutput `json:"-", xml:"-"`
}

type metadataAttachInstancesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type AutoScalingGroup struct {
	AutoScalingGroupARN     *string             `type:"string"`
	AutoScalingGroupName    *string             `type:"string" required:"true"`
	AvailabilityZones       []*string           `type:"list" required:"true"`
	CreatedTime             *time.Time          `type:"timestamp" timestampFormat:"iso8601" required:"true"`
	DefaultCooldown         *int64              `type:"integer" required:"true"`
	DesiredCapacity         *int64              `type:"integer" required:"true"`
	EnabledMetrics          []*EnabledMetric    `type:"list"`
	HealthCheckGracePeriod  *int64              `type:"integer"`
	HealthCheckType         *string             `type:"string" required:"true"`
	Instances               []*Instance         `type:"list"`
	LaunchConfigurationName *string             `type:"string" required:"true"`
	LoadBalancerNames       []*string           `type:"list"`
	MaxSize                 *int64              `type:"integer" required:"true"`
	MinSize                 *int64              `type:"integer" required:"true"`
	PlacementGroup          *string             `type:"string"`
	Status                  *string             `type:"string"`
	SuspendedProcesses      []*SuspendedProcess `type:"list"`
	Tags                    []*TagDescription   `type:"list"`
	TerminationPolicies     []*string           `type:"list"`
	VPCZoneIdentifier       *string             `type:"string"`

	metadataAutoScalingGroup `json:"-", xml:"-"`
}

type metadataAutoScalingGroup struct {
	SDKShapeTraits bool `type:"structure"`
}

type AutoScalingInstanceDetails struct {
	AutoScalingGroupName    *string `type:"string" required:"true"`
	AvailabilityZone        *string `type:"string" required:"true"`
	HealthStatus            *string `type:"string" required:"true"`
	InstanceID              *string `locationName:"InstanceId" type:"string" required:"true"`
	LaunchConfigurationName *string `type:"string" required:"true"`
	LifecycleState          *string `type:"string" required:"true"`

	metadataAutoScalingInstanceDetails `json:"-", xml:"-"`
}

type metadataAutoScalingInstanceDetails struct {
	SDKShapeTraits bool `type:"structure"`
}

type BlockDeviceMapping struct {
	DeviceName  *string `type:"string" required:"true"`
	EBS         *EBS    `locationName:"Ebs" type:"structure"`
	NoDevice    *bool   `type:"boolean"`
	VirtualName *string `type:"string"`

	metadataBlockDeviceMapping `json:"-", xml:"-"`
}

type metadataBlockDeviceMapping struct {
	SDKShapeTraits bool `type:"structure"`
}

type CompleteLifecycleActionInput struct {
	AutoScalingGroupName  *string `type:"string" required:"true"`
	LifecycleActionResult *string `type:"string" required:"true"`
	LifecycleActionToken  *string `type:"string" required:"true"`
	LifecycleHookName     *string `type:"string" required:"true"`

	metadataCompleteLifecycleActionInput `json:"-", xml:"-"`
}

type metadataCompleteLifecycleActionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CompleteLifecycleActionOutput struct {
	metadataCompleteLifecycleActionOutput `json:"-", xml:"-"`
}

type metadataCompleteLifecycleActionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateAutoScalingGroupInput struct {
	AutoScalingGroupName    *string   `type:"string" required:"true"`
	AvailabilityZones       []*string `type:"list"`
	DefaultCooldown         *int64    `type:"integer"`
	DesiredCapacity         *int64    `type:"integer"`
	HealthCheckGracePeriod  *int64    `type:"integer"`
	HealthCheckType         *string   `type:"string"`
	InstanceID              *string   `locationName:"InstanceId" type:"string"`
	LaunchConfigurationName *string   `type:"string"`
	LoadBalancerNames       []*string `type:"list"`
	MaxSize                 *int64    `type:"integer" required:"true"`
	MinSize                 *int64    `type:"integer" required:"true"`
	PlacementGroup          *string   `type:"string"`
	Tags                    []*Tag    `type:"list"`
	TerminationPolicies     []*string `type:"list"`
	VPCZoneIdentifier       *string   `type:"string"`

	metadataCreateAutoScalingGroupInput `json:"-", xml:"-"`
}

type metadataCreateAutoScalingGroupInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateAutoScalingGroupOutput struct {
	metadataCreateAutoScalingGroupOutput `json:"-", xml:"-"`
}

type metadataCreateAutoScalingGroupOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateLaunchConfigurationInput struct {
	AssociatePublicIPAddress     *bool                 `locationName:"AssociatePublicIpAddress" type:"boolean"`
	BlockDeviceMappings          []*BlockDeviceMapping `type:"list"`
	ClassicLinkVPCID             *string               `locationName:"ClassicLinkVPCId" type:"string"`
	ClassicLinkVPCSecurityGroups []*string             `type:"list"`
	EBSOptimized                 *bool                 `locationName:"EbsOptimized" type:"boolean"`
	IAMInstanceProfile           *string               `locationName:"IamInstanceProfile" type:"string"`
	ImageID                      *string               `locationName:"ImageId" type:"string"`
	InstanceID                   *string               `locationName:"InstanceId" type:"string"`
	InstanceMonitoring           *InstanceMonitoring   `type:"structure"`
	InstanceType                 *string               `type:"string"`
	KernelID                     *string               `locationName:"KernelId" type:"string"`
	KeyName                      *string               `type:"string"`
	LaunchConfigurationName      *string               `type:"string" required:"true"`
	PlacementTenancy             *string               `type:"string"`
	RAMDiskID                    *string               `locationName:"RamdiskId" type:"string"`
	SecurityGroups               []*string             `type:"list"`
	SpotPrice                    *string               `type:"string"`
	UserData                     *string               `type:"string"`

	metadataCreateLaunchConfigurationInput `json:"-", xml:"-"`
}

type metadataCreateLaunchConfigurationInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateLaunchConfigurationOutput struct {
	metadataCreateLaunchConfigurationOutput `json:"-", xml:"-"`
}

type metadataCreateLaunchConfigurationOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateOrUpdateTagsInput struct {
	Tags []*Tag `type:"list" required:"true"`

	metadataCreateOrUpdateTagsInput `json:"-", xml:"-"`
}

type metadataCreateOrUpdateTagsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateOrUpdateTagsOutput struct {
	metadataCreateOrUpdateTagsOutput `json:"-", xml:"-"`
}

type metadataCreateOrUpdateTagsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteAutoScalingGroupInput struct {
	AutoScalingGroupName *string `type:"string" required:"true"`
	ForceDelete          *bool   `type:"boolean"`

	metadataDeleteAutoScalingGroupInput `json:"-", xml:"-"`
}

type metadataDeleteAutoScalingGroupInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteAutoScalingGroupOutput struct {
	metadataDeleteAutoScalingGroupOutput `json:"-", xml:"-"`
}

type metadataDeleteAutoScalingGroupOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteLaunchConfigurationInput struct {
	LaunchConfigurationName *string `type:"string" required:"true"`

	metadataDeleteLaunchConfigurationInput `json:"-", xml:"-"`
}

type metadataDeleteLaunchConfigurationInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteLaunchConfigurationOutput struct {
	metadataDeleteLaunchConfigurationOutput `json:"-", xml:"-"`
}

type metadataDeleteLaunchConfigurationOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteLifecycleHookInput struct {
	AutoScalingGroupName *string `type:"string" required:"true"`
	LifecycleHookName    *string `type:"string" required:"true"`

	metadataDeleteLifecycleHookInput `json:"-", xml:"-"`
}

type metadataDeleteLifecycleHookInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteLifecycleHookOutput struct {
	metadataDeleteLifecycleHookOutput `json:"-", xml:"-"`
}

type metadataDeleteLifecycleHookOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteNotificationConfigurationInput struct {
	AutoScalingGroupName *string `type:"string" required:"true"`
	TopicARN             *string `type:"string" required:"true"`

	metadataDeleteNotificationConfigurationInput `json:"-", xml:"-"`
}

type metadataDeleteNotificationConfigurationInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteNotificationConfigurationOutput struct {
	metadataDeleteNotificationConfigurationOutput `json:"-", xml:"-"`
}

type metadataDeleteNotificationConfigurationOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeletePolicyInput struct {
	AutoScalingGroupName *string `type:"string"`
	PolicyName           *string `type:"string" required:"true"`

	metadataDeletePolicyInput `json:"-", xml:"-"`
}

type metadataDeletePolicyInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeletePolicyOutput struct {
	metadataDeletePolicyOutput `json:"-", xml:"-"`
}

type metadataDeletePolicyOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteScheduledActionInput struct {
	AutoScalingGroupName *string `type:"string"`
	ScheduledActionName  *string `type:"string" required:"true"`

	metadataDeleteScheduledActionInput `json:"-", xml:"-"`
}

type metadataDeleteScheduledActionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteScheduledActionOutput struct {
	metadataDeleteScheduledActionOutput `json:"-", xml:"-"`
}

type metadataDeleteScheduledActionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteTagsInput struct {
	Tags []*Tag `type:"list" required:"true"`

	metadataDeleteTagsInput `json:"-", xml:"-"`
}

type metadataDeleteTagsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DeleteTagsOutput struct {
	metadataDeleteTagsOutput `json:"-", xml:"-"`
}

type metadataDeleteTagsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAccountLimitsInput struct {
	metadataDescribeAccountLimitsInput `json:"-", xml:"-"`
}

type metadataDescribeAccountLimitsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAccountLimitsOutput struct {
	MaxNumberOfAutoScalingGroups    *int64 `type:"integer"`
	MaxNumberOfLaunchConfigurations *int64 `type:"integer"`

	metadataDescribeAccountLimitsOutput `json:"-", xml:"-"`
}

type metadataDescribeAccountLimitsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAdjustmentTypesInput struct {
	metadataDescribeAdjustmentTypesInput `json:"-", xml:"-"`
}

type metadataDescribeAdjustmentTypesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAdjustmentTypesOutput struct {
	AdjustmentTypes []*AdjustmentType `type:"list"`

	metadataDescribeAdjustmentTypesOutput `json:"-", xml:"-"`
}

type metadataDescribeAdjustmentTypesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingGroupsInput struct {
	AutoScalingGroupNames []*string `type:"list"`
	MaxRecords            *int64    `type:"integer"`
	NextToken             *string   `type:"string"`

	metadataDescribeAutoScalingGroupsInput `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingGroupsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingGroupsOutput struct {
	AutoScalingGroups []*AutoScalingGroup `type:"list" required:"true"`
	NextToken         *string             `type:"string"`

	metadataDescribeAutoScalingGroupsOutput `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingGroupsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingInstancesInput struct {
	InstanceIDs []*string `locationName:"InstanceIds" type:"list"`
	MaxRecords  *int64    `type:"integer"`
	NextToken   *string   `type:"string"`

	metadataDescribeAutoScalingInstancesInput `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingInstancesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingInstancesOutput struct {
	AutoScalingInstances []*AutoScalingInstanceDetails `type:"list"`
	NextToken            *string                       `type:"string"`

	metadataDescribeAutoScalingInstancesOutput `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingInstancesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingNotificationTypesInput struct {
	metadataDescribeAutoScalingNotificationTypesInput `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingNotificationTypesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingNotificationTypesOutput struct {
	AutoScalingNotificationTypes []*string `type:"list"`

	metadataDescribeAutoScalingNotificationTypesOutput `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingNotificationTypesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLaunchConfigurationsInput struct {
	LaunchConfigurationNames []*string `type:"list"`
	MaxRecords               *int64    `type:"integer"`
	NextToken                *string   `type:"string"`

	metadataDescribeLaunchConfigurationsInput `json:"-", xml:"-"`
}

type metadataDescribeLaunchConfigurationsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLaunchConfigurationsOutput struct {
	LaunchConfigurations []*LaunchConfiguration `type:"list" required:"true"`
	NextToken            *string                `type:"string"`

	metadataDescribeLaunchConfigurationsOutput `json:"-", xml:"-"`
}

type metadataDescribeLaunchConfigurationsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLifecycleHookTypesInput struct {
	metadataDescribeLifecycleHookTypesInput `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHookTypesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLifecycleHookTypesOutput struct {
	LifecycleHookTypes []*string `type:"list"`

	metadataDescribeLifecycleHookTypesOutput `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHookTypesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLifecycleHooksInput struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	LifecycleHookNames   []*string `type:"list"`

	metadataDescribeLifecycleHooksInput `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHooksInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeLifecycleHooksOutput struct {
	LifecycleHooks []*LifecycleHook `type:"list"`

	metadataDescribeLifecycleHooksOutput `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHooksOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeMetricCollectionTypesInput struct {
	metadataDescribeMetricCollectionTypesInput `json:"-", xml:"-"`
}

type metadataDescribeMetricCollectionTypesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeMetricCollectionTypesOutput struct {
	Granularities []*MetricGranularityType `type:"list"`
	Metrics       []*MetricCollectionType  `type:"list"`

	metadataDescribeMetricCollectionTypesOutput `json:"-", xml:"-"`
}

type metadataDescribeMetricCollectionTypesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeNotificationConfigurationsInput struct {
	AutoScalingGroupNames []*string `type:"list"`
	MaxRecords            *int64    `type:"integer"`
	NextToken             *string   `type:"string"`

	metadataDescribeNotificationConfigurationsInput `json:"-", xml:"-"`
}

type metadataDescribeNotificationConfigurationsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeNotificationConfigurationsOutput struct {
	NextToken                  *string                      `type:"string"`
	NotificationConfigurations []*NotificationConfiguration `type:"list" required:"true"`

	metadataDescribeNotificationConfigurationsOutput `json:"-", xml:"-"`
}

type metadataDescribeNotificationConfigurationsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribePoliciesInput struct {
	AutoScalingGroupName *string   `type:"string"`
	MaxRecords           *int64    `type:"integer"`
	NextToken            *string   `type:"string"`
	PolicyNames          []*string `type:"list"`

	metadataDescribePoliciesInput `json:"-", xml:"-"`
}

type metadataDescribePoliciesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribePoliciesOutput struct {
	NextToken       *string          `type:"string"`
	ScalingPolicies []*ScalingPolicy `type:"list"`

	metadataDescribePoliciesOutput `json:"-", xml:"-"`
}

type metadataDescribePoliciesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingActivitiesInput struct {
	ActivityIDs          []*string `locationName:"ActivityIds" type:"list"`
	AutoScalingGroupName *string   `type:"string"`
	MaxRecords           *int64    `type:"integer"`
	NextToken            *string   `type:"string"`

	metadataDescribeScalingActivitiesInput `json:"-", xml:"-"`
}

type metadataDescribeScalingActivitiesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingActivitiesOutput struct {
	Activities []*Activity `type:"list" required:"true"`
	NextToken  *string     `type:"string"`

	metadataDescribeScalingActivitiesOutput `json:"-", xml:"-"`
}

type metadataDescribeScalingActivitiesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingProcessTypesInput struct {
	metadataDescribeScalingProcessTypesInput `json:"-", xml:"-"`
}

type metadataDescribeScalingProcessTypesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingProcessTypesOutput struct {
	Processes []*ProcessType `type:"list"`

	metadataDescribeScalingProcessTypesOutput `json:"-", xml:"-"`
}

type metadataDescribeScalingProcessTypesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScheduledActionsInput struct {
	AutoScalingGroupName *string    `type:"string"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	MaxRecords           *int64     `type:"integer"`
	NextToken            *string    `type:"string"`
	ScheduledActionNames []*string  `type:"list"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataDescribeScheduledActionsInput `json:"-", xml:"-"`
}

type metadataDescribeScheduledActionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScheduledActionsOutput struct {
	NextToken                   *string                       `type:"string"`
	ScheduledUpdateGroupActions []*ScheduledUpdateGroupAction `type:"list"`

	metadataDescribeScheduledActionsOutput `json:"-", xml:"-"`
}

type metadataDescribeScheduledActionsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTagsInput struct {
	Filters    []*Filter `type:"list"`
	MaxRecords *int64    `type:"integer"`
	NextToken  *string   `type:"string"`

	metadataDescribeTagsInput `json:"-", xml:"-"`
}

type metadataDescribeTagsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTagsOutput struct {
	NextToken *string           `type:"string"`
	Tags      []*TagDescription `type:"list"`

	metadataDescribeTagsOutput `json:"-", xml:"-"`
}

type metadataDescribeTagsOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTerminationPolicyTypesInput struct {
	metadataDescribeTerminationPolicyTypesInput `json:"-", xml:"-"`
}

type metadataDescribeTerminationPolicyTypesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTerminationPolicyTypesOutput struct {
	TerminationPolicyTypes []*string `type:"list"`

	metadataDescribeTerminationPolicyTypesOutput `json:"-", xml:"-"`
}

type metadataDescribeTerminationPolicyTypesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DetachInstancesInput struct {
	AutoScalingGroupName           *string   `type:"string" required:"true"`
	InstanceIDs                    []*string `locationName:"InstanceIds" type:"list"`
	ShouldDecrementDesiredCapacity *bool     `type:"boolean" required:"true"`

	metadataDetachInstancesInput `json:"-", xml:"-"`
}

type metadataDetachInstancesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DetachInstancesOutput struct {
	Activities []*Activity `type:"list"`

	metadataDetachInstancesOutput `json:"-", xml:"-"`
}

type metadataDetachInstancesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisableMetricsCollectionInput struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	Metrics              []*string `type:"list"`

	metadataDisableMetricsCollectionInput `json:"-", xml:"-"`
}

type metadataDisableMetricsCollectionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type DisableMetricsCollectionOutput struct {
	metadataDisableMetricsCollectionOutput `json:"-", xml:"-"`
}

type metadataDisableMetricsCollectionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type EBS struct {
	DeleteOnTermination *bool   `type:"boolean"`
	IOPS                *int64  `locationName:"Iops" type:"integer"`
	SnapshotID          *string `locationName:"SnapshotId" type:"string"`
	VolumeSize          *int64  `type:"integer"`
	VolumeType          *string `type:"string"`

	metadataEBS `json:"-", xml:"-"`
}

type metadataEBS struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnableMetricsCollectionInput struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	Granularity          *string   `type:"string" required:"true"`
	Metrics              []*string `type:"list"`

	metadataEnableMetricsCollectionInput `json:"-", xml:"-"`
}

type metadataEnableMetricsCollectionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnableMetricsCollectionOutput struct {
	metadataEnableMetricsCollectionOutput `json:"-", xml:"-"`
}

type metadataEnableMetricsCollectionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnabledMetric struct {
	Granularity *string `type:"string"`
	Metric      *string `type:"string"`

	metadataEnabledMetric `json:"-", xml:"-"`
}

type metadataEnabledMetric struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnterStandbyInput struct {
	AutoScalingGroupName           *string   `type:"string" required:"true"`
	InstanceIDs                    []*string `locationName:"InstanceIds" type:"list"`
	ShouldDecrementDesiredCapacity *bool     `type:"boolean" required:"true"`

	metadataEnterStandbyInput `json:"-", xml:"-"`
}

type metadataEnterStandbyInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnterStandbyOutput struct {
	Activities []*Activity `type:"list"`

	metadataEnterStandbyOutput `json:"-", xml:"-"`
}

type metadataEnterStandbyOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ExecutePolicyInput struct {
	AutoScalingGroupName *string `type:"string"`
	HonorCooldown        *bool   `type:"boolean"`
	PolicyName           *string `type:"string" required:"true"`

	metadataExecutePolicyInput `json:"-", xml:"-"`
}

type metadataExecutePolicyInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ExecutePolicyOutput struct {
	metadataExecutePolicyOutput `json:"-", xml:"-"`
}

type metadataExecutePolicyOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ExitStandbyInput struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	InstanceIDs          []*string `locationName:"InstanceIds" type:"list"`

	metadataExitStandbyInput `json:"-", xml:"-"`
}

type metadataExitStandbyInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ExitStandbyOutput struct {
	Activities []*Activity `type:"list"`

	metadataExitStandbyOutput `json:"-", xml:"-"`
}

type metadataExitStandbyOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type Filter struct {
	Name   *string   `type:"string"`
	Values []*string `type:"list"`

	metadataFilter `json:"-", xml:"-"`
}

type metadataFilter struct {
	SDKShapeTraits bool `type:"structure"`
}

type Instance struct {
	AvailabilityZone        *string `type:"string" required:"true"`
	HealthStatus            *string `type:"string" required:"true"`
	InstanceID              *string `locationName:"InstanceId" type:"string" required:"true"`
	LaunchConfigurationName *string `type:"string" required:"true"`
	LifecycleState          *string `type:"string" required:"true"`

	metadataInstance `json:"-", xml:"-"`
}

type metadataInstance struct {
	SDKShapeTraits bool `type:"structure"`
}

type InstanceMonitoring struct {
	Enabled *bool `type:"boolean"`

	metadataInstanceMonitoring `json:"-", xml:"-"`
}

type metadataInstanceMonitoring struct {
	SDKShapeTraits bool `type:"structure"`
}

type LaunchConfiguration struct {
	AssociatePublicIPAddress     *bool                 `locationName:"AssociatePublicIpAddress" type:"boolean"`
	BlockDeviceMappings          []*BlockDeviceMapping `type:"list"`
	ClassicLinkVPCID             *string               `locationName:"ClassicLinkVPCId" type:"string"`
	ClassicLinkVPCSecurityGroups []*string             `type:"list"`
	CreatedTime                  *time.Time            `type:"timestamp" timestampFormat:"iso8601" required:"true"`
	EBSOptimized                 *bool                 `locationName:"EbsOptimized" type:"boolean"`
	IAMInstanceProfile           *string               `locationName:"IamInstanceProfile" type:"string"`
	ImageID                      *string               `locationName:"ImageId" type:"string" required:"true"`
	InstanceMonitoring           *InstanceMonitoring   `type:"structure"`
	InstanceType                 *string               `type:"string" required:"true"`
	KernelID                     *string               `locationName:"KernelId" type:"string"`
	KeyName                      *string               `type:"string"`
	LaunchConfigurationARN       *string               `type:"string"`
	LaunchConfigurationName      *string               `type:"string" required:"true"`
	PlacementTenancy             *string               `type:"string"`
	RAMDiskID                    *string               `locationName:"RamdiskId" type:"string"`
	SecurityGroups               []*string             `type:"list"`
	SpotPrice                    *string               `type:"string"`
	UserData                     *string               `type:"string"`

	metadataLaunchConfiguration `json:"-", xml:"-"`
}

type metadataLaunchConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

type LifecycleHook struct {
	AutoScalingGroupName  *string `type:"string"`
	DefaultResult         *string `type:"string"`
	GlobalTimeout         *int64  `type:"integer"`
	HeartbeatTimeout      *int64  `type:"integer"`
	LifecycleHookName     *string `type:"string"`
	LifecycleTransition   *string `type:"string"`
	NotificationMetadata  *string `type:"string"`
	NotificationTargetARN *string `type:"string"`
	RoleARN               *string `type:"string"`

	metadataLifecycleHook `json:"-", xml:"-"`
}

type metadataLifecycleHook struct {
	SDKShapeTraits bool `type:"structure"`
}

type MetricCollectionType struct {
	Metric *string `type:"string"`

	metadataMetricCollectionType `json:"-", xml:"-"`
}

type metadataMetricCollectionType struct {
	SDKShapeTraits bool `type:"structure"`
}

type MetricGranularityType struct {
	Granularity *string `type:"string"`

	metadataMetricGranularityType `json:"-", xml:"-"`
}

type metadataMetricGranularityType struct {
	SDKShapeTraits bool `type:"structure"`
}

type NotificationConfiguration struct {
	AutoScalingGroupName *string `type:"string"`
	NotificationType     *string `type:"string"`
	TopicARN             *string `type:"string"`

	metadataNotificationConfiguration `json:"-", xml:"-"`
}

type metadataNotificationConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

type ProcessType struct {
	ProcessName *string `type:"string" required:"true"`

	metadataProcessType `json:"-", xml:"-"`
}

type metadataProcessType struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutLifecycleHookInput struct {
	AutoScalingGroupName  *string `type:"string" required:"true"`
	DefaultResult         *string `type:"string"`
	HeartbeatTimeout      *int64  `type:"integer"`
	LifecycleHookName     *string `type:"string" required:"true"`
	LifecycleTransition   *string `type:"string"`
	NotificationMetadata  *string `type:"string"`
	NotificationTargetARN *string `type:"string"`
	RoleARN               *string `type:"string"`

	metadataPutLifecycleHookInput `json:"-", xml:"-"`
}

type metadataPutLifecycleHookInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutLifecycleHookOutput struct {
	metadataPutLifecycleHookOutput `json:"-", xml:"-"`
}

type metadataPutLifecycleHookOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutNotificationConfigurationInput struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	NotificationTypes    []*string `type:"list" required:"true"`
	TopicARN             *string   `type:"string" required:"true"`

	metadataPutNotificationConfigurationInput `json:"-", xml:"-"`
}

type metadataPutNotificationConfigurationInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutNotificationConfigurationOutput struct {
	metadataPutNotificationConfigurationOutput `json:"-", xml:"-"`
}

type metadataPutNotificationConfigurationOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutScalingPolicyInput struct {
	AdjustmentType       *string `type:"string" required:"true"`
	AutoScalingGroupName *string `type:"string" required:"true"`
	Cooldown             *int64  `type:"integer"`
	MinAdjustmentStep    *int64  `type:"integer"`
	PolicyName           *string `type:"string" required:"true"`
	ScalingAdjustment    *int64  `type:"integer" required:"true"`

	metadataPutScalingPolicyInput `json:"-", xml:"-"`
}

type metadataPutScalingPolicyInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutScalingPolicyOutput struct {
	PolicyARN *string `type:"string"`

	metadataPutScalingPolicyOutput `json:"-", xml:"-"`
}

type metadataPutScalingPolicyOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutScheduledUpdateGroupActionInput struct {
	AutoScalingGroupName *string    `type:"string" required:"true"`
	DesiredCapacity      *int64     `type:"integer"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	MaxSize              *int64     `type:"integer"`
	MinSize              *int64     `type:"integer"`
	Recurrence           *string    `type:"string"`
	ScheduledActionName  *string    `type:"string" required:"true"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Time                 *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataPutScheduledUpdateGroupActionInput `json:"-", xml:"-"`
}

type metadataPutScheduledUpdateGroupActionInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type PutScheduledUpdateGroupActionOutput struct {
	metadataPutScheduledUpdateGroupActionOutput `json:"-", xml:"-"`
}

type metadataPutScheduledUpdateGroupActionOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RecordLifecycleActionHeartbeatInput struct {
	AutoScalingGroupName *string `type:"string" required:"true"`
	LifecycleActionToken *string `type:"string" required:"true"`
	LifecycleHookName    *string `type:"string" required:"true"`

	metadataRecordLifecycleActionHeartbeatInput `json:"-", xml:"-"`
}

type metadataRecordLifecycleActionHeartbeatInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type RecordLifecycleActionHeartbeatOutput struct {
	metadataRecordLifecycleActionHeartbeatOutput `json:"-", xml:"-"`
}

type metadataRecordLifecycleActionHeartbeatOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ResumeProcessesOutput struct {
	metadataResumeProcessesOutput `json:"-", xml:"-"`
}

type metadataResumeProcessesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingPolicy struct {
	AdjustmentType       *string  `type:"string"`
	Alarms               []*Alarm `type:"list"`
	AutoScalingGroupName *string  `type:"string"`
	Cooldown             *int64   `type:"integer"`
	MinAdjustmentStep    *int64   `type:"integer"`
	PolicyARN            *string  `type:"string"`
	PolicyName           *string  `type:"string"`
	ScalingAdjustment    *int64   `type:"integer"`

	metadataScalingPolicy `json:"-", xml:"-"`
}

type metadataScalingPolicy struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingProcessQuery struct {
	AutoScalingGroupName *string   `type:"string" required:"true"`
	ScalingProcesses     []*string `type:"list"`

	metadataScalingProcessQuery `json:"-", xml:"-"`
}

type metadataScalingProcessQuery struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScheduledUpdateGroupAction struct {
	AutoScalingGroupName *string    `type:"string"`
	DesiredCapacity      *int64     `type:"integer"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	MaxSize              *int64     `type:"integer"`
	MinSize              *int64     `type:"integer"`
	Recurrence           *string    `type:"string"`
	ScheduledActionARN   *string    `type:"string"`
	ScheduledActionName  *string    `type:"string"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Time                 *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataScheduledUpdateGroupAction `json:"-", xml:"-"`
}

type metadataScheduledUpdateGroupAction struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetDesiredCapacityInput struct {
	AutoScalingGroupName *string `type:"string" required:"true"`
	DesiredCapacity      *int64  `type:"integer" required:"true"`
	HonorCooldown        *bool   `type:"boolean"`

	metadataSetDesiredCapacityInput `json:"-", xml:"-"`
}

type metadataSetDesiredCapacityInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetDesiredCapacityOutput struct {
	metadataSetDesiredCapacityOutput `json:"-", xml:"-"`
}

type metadataSetDesiredCapacityOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetInstanceHealthInput struct {
	HealthStatus             *string `type:"string" required:"true"`
	InstanceID               *string `locationName:"InstanceId" type:"string" required:"true"`
	ShouldRespectGracePeriod *bool   `type:"boolean"`

	metadataSetInstanceHealthInput `json:"-", xml:"-"`
}

type metadataSetInstanceHealthInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetInstanceHealthOutput struct {
	metadataSetInstanceHealthOutput `json:"-", xml:"-"`
}

type metadataSetInstanceHealthOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SuspendProcessesOutput struct {
	metadataSuspendProcessesOutput `json:"-", xml:"-"`
}

type metadataSuspendProcessesOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type SuspendedProcess struct {
	ProcessName      *string `type:"string"`
	SuspensionReason *string `type:"string"`

	metadataSuspendedProcess `json:"-", xml:"-"`
}

type metadataSuspendedProcess struct {
	SDKShapeTraits bool `type:"structure"`
}

type Tag struct {
	Key               *string `type:"string" required:"true"`
	PropagateAtLaunch *bool   `type:"boolean"`
	ResourceID        *string `locationName:"ResourceId" type:"string"`
	ResourceType      *string `type:"string"`
	Value             *string `type:"string"`

	metadataTag `json:"-", xml:"-"`
}

type metadataTag struct {
	SDKShapeTraits bool `type:"structure"`
}

type TagDescription struct {
	Key               *string `type:"string"`
	PropagateAtLaunch *bool   `type:"boolean"`
	ResourceID        *string `locationName:"ResourceId" type:"string"`
	ResourceType      *string `type:"string"`
	Value             *string `type:"string"`

	metadataTagDescription `json:"-", xml:"-"`
}

type metadataTagDescription struct {
	SDKShapeTraits bool `type:"structure"`
}

type TerminateInstanceInAutoScalingGroupInput struct {
	InstanceID                     *string `locationName:"InstanceId" type:"string" required:"true"`
	ShouldDecrementDesiredCapacity *bool   `type:"boolean" required:"true"`

	metadataTerminateInstanceInAutoScalingGroupInput `json:"-", xml:"-"`
}

type metadataTerminateInstanceInAutoScalingGroupInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type TerminateInstanceInAutoScalingGroupOutput struct {
	Activity *Activity `type:"structure"`

	metadataTerminateInstanceInAutoScalingGroupOutput `json:"-", xml:"-"`
}

type metadataTerminateInstanceInAutoScalingGroupOutput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateAutoScalingGroupInput struct {
	AutoScalingGroupName    *string   `type:"string" required:"true"`
	AvailabilityZones       []*string `type:"list"`
	DefaultCooldown         *int64    `type:"integer"`
	DesiredCapacity         *int64    `type:"integer"`
	HealthCheckGracePeriod  *int64    `type:"integer"`
	HealthCheckType         *string   `type:"string"`
	LaunchConfigurationName *string   `type:"string"`
	MaxSize                 *int64    `type:"integer"`
	MinSize                 *int64    `type:"integer"`
	PlacementGroup          *string   `type:"string"`
	TerminationPolicies     []*string `type:"list"`
	VPCZoneIdentifier       *string   `type:"string"`

	metadataUpdateAutoScalingGroupInput `json:"-", xml:"-"`
}

type metadataUpdateAutoScalingGroupInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateAutoScalingGroupOutput struct {
	metadataUpdateAutoScalingGroupOutput `json:"-", xml:"-"`
}

type metadataUpdateAutoScalingGroupOutput struct {
	SDKShapeTraits bool `type:"structure"`
}